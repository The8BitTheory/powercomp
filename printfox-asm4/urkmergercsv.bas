#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0,uppercase,10,10
#########################
# THIS ORS TWO GB FILES #
#########################

# A CSV FILE IS LOADED TO HAVE INFORMATION ABOUT PLAYERS AND RANKS

# LOAD TOP-HALF GB TO BANK0, AFTER BASIC (B0,BE)
# UNCOMPRESS GB TO BANK 1 AFTER VARIABLES (B1,VE)

# LOAD DISZIPLIN-GB TO BANK 1 AFTER VARIABLES+32000 (B1,VE+32K)
# UNCOMPRESS DISZIPLIN-GB TO BANK 0 AFTER BASIC (B0,BE)

# MERGE TH-UGB (B1,VE) AND DISZIPLIN-UGB (B0,BE) TO B0,BE
# SAVE TO DISK

# LOAD PLAYER GB TO BANK 1 AFTER VARIABLES+32000 (B1,VE+32K)
# UNCOMPRESS PLAYER-GB TO BANK 1 AFTER VARIABLES (B1,VE)

# MERGE PLAYER-UGB(B1,VE) INTO TO B0,BE

# PACK B0,BE TO B1,VE


2 S1=TI:FAST:GRAPHIC1:GRAPHIC0:GRAPHIC5:BANK15:POKE 57,0:POKE58,39:CLR
4 DD=PEEK(186)

# BASIC END (CONTAINS COMPRESSED GB FILE)
6 BE=PEEK(4624)+PEEK(4625)*256

# VARIABLE END (CONTAINS UNCOMPRESSED GB FILES)
8 VE=PEEK(57)+PEEK(58)*256

10 PRINT "BASIC END (COMPRESSED GB):"BE
12 PRINT "VARIABLE END (UNCOMP. GB):"VE


15 PRINT "LOADING GB.BIN...";:BLOAD"GB.BIN",B0,U(DD):PRINT "DONE"
16 PRINT "LOADING FSAVE.BIN...";:BLOAD"FSAVE-1C20.BIN",B0,U(DD):PRINT "DONE"

20 DEF FN HB(ZZ)=INT(ZZ/256)
21 DEF FN LB(ZZ)=ZZ-INT(ZZ/256)*256
22 DEF FN RO(ZZ)=ABS((ZZ AND 1) = 1)*32000

25 PN$="":FM=0:TF=0:FF=0:SB=0:SA=0:DB=0:DA=0:FE=0:EA=0:PM=31:DM=6
26 DIM IM(DM),PN$(DM,PM),PS(DM,PM)


32 DIM FI$(99),DT$(50,3),MP$(99)

35 INPUT "COMPETITION-ID (3 CHARS)";CI$
36 IF LEN(CI$)>3 THEN CI$=LEFT$(CI$,3)

37 DI$="":INPUT "DISCIPLINE-ID (3 CHARS)";DI$
38 IF LEN(DI$)>3 THEN DI$=LEFT$(DI$,3):ELSE IF LEN(DI$)=0 THEN END

39 FI$="WERTNG"+CI$+DI$+".CSV"

90 PRINT FRE(0) FRE(1)

91 DOPEN #1,(FI$):IF DS<>0 THEN PRINT DS$" FILE "FI$:END
92 X=0:DO 
93  INPUT#1,DT$(X,0),DT$(X,1),DT$(X,2)
94  IF LEFT$(DT$(X,0),1)=CHR$(10) THEN DT$(X,0)=MID$(DT$(X,0),2)

95  X=X+1
96 LOOP UNTIL ST>=64
97 DCLOSE #1
98 PRINT "CSV LOADED. "X" ENTRIES READ."
99 IM(0)=X-1:GOSUB 6000


130 MP=-1

200 OD=10:ID=8

210 FI$=CI$+DI$+".GB1"    :SB=0:SA=BE      :DB=1:DA=VE:GOSUB 1000

220 FOR R=0 TO IM(0)-1

225  FO$=CI$+"-"+DI$+"-"+LEFT$(DT$(R,3),3)+".GB1"
226  DOPEN#1,(FO$),R,U(OD):CS=DS:DCLOSE#1
227  IF CS<>62 THEN PRINT FO$" ALREADY EXISTS. SKIPPING.":GOTO299

230  FI$="SPI"+LEFT$(DT$(R,3),3)+".GB"
232  DOPEN#1,(FI$),R,U(ID):CS=DS:DCLOSE#1
233  IF CS=62 THEN PRINT FI$" MISSING. SKIPPING.":MP=MP+1:MP$(MP)=DT$(R,3):GOTO299

240  SB=1:SA=VE+32000:DB=0:DA=BE:GOSUB1000

249  PRINT "MERGING PLAYER "DT$(R,3)" FROM B1,"VE" TO B0,"BE"... ";
250  GOSUB 400

#   RANKS
299 NEXT


300 PRINT "---------------------------------------"
301 PRINT "TOP HALF DONE, MOVING ON TO BOTTOM HALF"
302 PRINT "---------------------------------------"

305 FI$=CI$+DI$+".GB2"    :SB=0:SA=BE      :DB=1:DA=VE:GOSUB 1000

310 FOR R=0 TO IM(0)-1

325  FO$=CI$+"-"+DI$+"-"+MID$(STR$(R+1),2)+".GB2"
326  DOPEN#1,(FO$),R,U(OD):CS=DS:DCLOSE#1
327  IF CS<>62 THEN PRINT FO$" ALREADY EXISTS. SKIPPING.":GOTO398

330  FI$="RANG"+DT$(R,0)+".GB":SB=1:SA=VE+32000:DB=0:DA=BE:GOSUB1000

349  PRINT "MERGING RANK "DT$(R,0)" FROM B1,"VE" TO B0,"BE"... ";
350  GOSUB 400

#   RANKS
398 NEXT

399 GOTO 500



#     MERGE PARAMETERS
400 POKE 996,1
405 POKE 997,FNLB(VE):POKE 998,FNHB(VE)

410 POKE 1001,0
415 POKE 1002,FNLB(BE):POKE 1003,FNHB(BE)


420 :S=TI:SYS DEC("1306"):S=TI-S
425 PRINT "DONE. TOOK "S" JIFFIES"


#     PACK PARAMETERS
# SOURCE BANK: 996
# SOURCE START ADDRESS (COMP GB):997/998

430 POKE 996,0
435 POKE 997,FNLB(BE):POKE 998,FNHB(BE)

# DEST BANK: 999
# DEST START ADDRESS (UNCOMP GB):1000/1001
440 POKE 999,0
445 POKE 1000,FNLB(BE+32000):POKE 1001,FNHB(BE+32000)


450 PRINT "PACKING... B0,"BE" TO B0,"BE+32000;:S=TI:SYS DEC("1309"):S=TI-S
455 PRINT "DONE. TOOK "S" JIFFIES"

460 EA=PEEK(1002)+PEEK(1003)*256
465 PRINT "PACKED GB RESIDES IN B0 FROM "BE" TO "BE+32000

470 FI$="@0:"+FO$+",P,W"

475 SB=0:SA=BE+32000:GOSUB 5000
480 RETURN



500 BANK15:GRAPHIC5:S1=TI-S1:PRINT "TOTAL:"S1

504 IF MP<0 THEN 999

505 PRINT "MISSING PLAYERFILES:"
510 FOR X=0 TO MP
520  PRINT MP$(X)
530 NEXT


999 GOTO 37

### TIMES
# 9032. 4 DISZIPLINES, NO REU
# 8422. LOADING FIRST FILE FROM REU


# 157094 FOR 5 DISZIPLINES AND ALL PLAYERS. TOP HALF OF PAGE. STILL HAD ERRORS
# 116310 FOR 5 DISZIPLINES AND ALL PLAYERS. TOP HALF OF PAGE. OPTIMIZED REU MEM-USAGE
# = 32 MINUTES


##############
# UNCOMPRESS #
##############


# SET VARIABLES FOR UNCOMPRESSION

1000 GOSUB 2000

# SOURCE BANK
1010 POKE 996,SB

# SOURCE START ADDRESS
#1040 POKE 997,PEEK(4624):POKE 998,PEEK(4625)
1040 POKE 997,FNLB(SA):POKE 998,FNHB(SA)

# SOURCE END ADDRESS
1050 POKE 999,PEEK(174):POKE 1000,PEEK(175)

# DESTINATION BANK
1060 POKE 1001,DB

# DESTINATION ADDRESS
#1070 POKE 1002,FNLB(VE):POKE 1003,FNHB(VE)
1070 POKE 1002,FNLB(DA):POKE 1003,FNHB(DA)

1080 PRINT "UNCOMPRESSING TO: B"DB",DA"DA" - "(DA+32000)
1090 S=TI:SYS DEC("130C"):S=TI-S
1092 PRINT "DONE. TOOK "S" JIFFIES"


1099 RETURN



#############################
# LOAD GB FILE TO BASIC-END #
#############################
2000 PRINT "LOADING "FI$" TO B"SB",AD"SA;
2005 DOPEN #1,U(DD),(FI$),R
2010 GET#1,A$,B$
2020 DCLOSE #1

2030 IF A$<>"G" THEN PRINT FI$" IS NOT A GB FILE":END

# LOAD BINARY FILE. LEAVE TWO BYTES EMPTY AND MANUALLY POKE THE VALUES (BLOAD SKIPS THESE)
2040 BLOAD (FI$),B(SB),P(SA+2),U(DD)
2041 PRINT "DONE"


# FILE END (END OF COMPRESSED GB FILE
2042 FE=PEEK(174)+PEEK(175)*256
2044 PRINT "FILE END:"FE


2050 BANK SB
2052 POKE SA,ASC(A$):POKE SA+1,ASC(B$)
2054 BANK 15



2070 RETURN



#########################
# FSAVE 
#########################
# TAKES SA AS START ADDRESS
#       EA AS END ADDRESS
#       SB AS SAVE-BANK


5000 FP=POINTER(FI$):BANK 1:F0=PEEK(FP):F1=PEEK(FP+1):F2=PEEK(FP+2):BANK15

5010 POKE 1002,F0:REM PRINT "FILENAME LENGTH:"F0
5020 POKE 1000,F1:POKE 1001,F2:REM PRINT "FILENAME ADDRESS:"(F1+F2*256)

#    FILE START-ADDRESS
5030 POKE DEC("FB"),FNLB(SA):POKE DEC("FC"),FNHB(SA)
#    FILE END-ADDRESS
5040 POKE 998,FNLB(EA):POKE 999,FNHB(EA)

#    FILE BANK
5050 POKE 1003,SB

#285 SCRATCH (FI$)
5060 POKE186,OD:PRINT "SAVING "SA" TO "EA" AS "FI$"...";:SYS DEC("1C20"):PRINT "DONE":POKE186,DD


5999 RETURN


##########
# TO PETSCII-UPPERCASE
###########
6000 REM
6005 FOR X=0 TO IM(CD)-1
6010  T$=DT$(X,1):T2$=""
6020  FOR TX=1 TO LEN(T$)
6030   C$=MID$(T$,TX,1):C=ASC(C$)
6040   IF C>=96 THEN IF C<=122 THEN T2$=T2$+CHR$(C-32):ELSE T2$=T2$+C$
6050  NEXT
6060  DT$(X,3)=T2$
6070 NEXT
6080 RETURN


# TO ASCII
6100 T2$=""
6110 FOR TX=1 TO LEN(T$)
6120  C$=MID$(T$,TX,1):C=ASC(C$)
6130  IF C>=65 THEN IF C<=91 THEN T2$=T2$+CHR$(C+32):GOTO 6050
6140  IF C>=193 THEN IF C<=218 THEN T2$=T2$+CHR$(C-128):GOTO 6050
6150  T2$=T2$+C$
6160 NEXT
 
6180 RETURN

