#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0 VDC,uppercase,10,10
# COLOR X,1: BLACK
# COLOR X,2: WHITE
# COLOR X,7: DARK BLUE
# COLOR X,13: DARK GREY
# COLOR X,16: LIGHT GREY

# COLOR6=80 COL BG
# COLOR5=FONT COLOR (BOTH, 40 AND 80 COLS)

# SET 80 COL GRAPHICS, CLEAR FUNCTION KEY DEFINITIONS

10 T$="BLITZ!":T=0:FOR L=1 TO LEN(T$):IF PEEK(DEC("1C25")+L)=ASC(MID$(T$,L,1)) THEN T=T+1:NEXT
11 IC=(T=6):PRINT "IS COMPILED:"IC

#20 PRINT "KEY":GETKEY I$
12 DU=PEEK(186):BE=PEEK(4624)+PEEK(4625)*256
13 BLOAD "VDCBASIC2D.0AC6",U(DU):SYS DEC("AC6"):RST3

14 FAST:GRAPHIC5:COLOR4,15:COLOR0,7:COLOR5,13:COLOR6,16:POKE 828,183:POKE2603,104:PRINT CHR$(14);

# SET NR OF SCANLINES PER CHARACTER TO 10 AND ADJUST OTHER VALUES ACCORDINGLY (TO 320 SCANLINES TOTAL)
15 GOSUB 29800:REM GOSUB 29900

#16 PRINT "LOADING MOUSEDRIVER...";:BLOAD "MOUSE128.BIN",U(DU):SYS DEC("1800"):PRINT"DONE"


17 DEF FN PN(ZZ)=ASC(LEFT$(SO$(CD,ZZ),1))

#PI$:PROGRESS INDICATOR
18 PI$=""
#AI$:ALPHABETICAL INPUT FOR WHICH COLUMN INDICES (ALL EXCEPT FILE DIALOG AND SCORES)
19 AI$=CHR$(0)+CHR$(2)+CHR$(3)+CHR$(5)+CHR$(6)
#NI$:NUMERICAL INPUT (ALL EXCEPT FILE DIALOG)
20 NI$=CHR$(0)+CHR$(1)+CHR$(2)+CHR$(3)+CHR$(5)+CHR$(6)
#C1$:CURSOR UP/DOWN INDICES
21 C1$=CHR$(0)+CHR$(1)+CHR$(2)+CHR$(4)
#C2$:CURSOR LEFT/RIGHT INDICES
22 C2$=CHR$(0)+CHR$(1)

#SD$:SAVE DISPLAY (WHICH CI VALUES ARE ALLOWED TO SAVE SCREEN STATE?)
23 SD$=CHR$(0)+CHR$(1)+CHR$(2)+CHR$(3)+CHR$(5)

#SHOW MENU (WHICH CI ARE ALLOWED TO OPEN MENU)
24 SM$=CHR$(0)+CHR$(1)+CHR$(2)+CHR$(3)+CHR$(5)


25 DU=PEEK(186):BE=PEEK(4624)+PEEK(4625)*256

#PM: PLAYER-MAXIMUM
#DM: DISCIPLINE MAXIMUM COUNT
#CD: CURRENT DISCIPLINE
#IM(): ID-MAXIMUM FOR PLAYER-SCORE ENTRIES (NEXT AVAILABLE ID) PER DISCIPLINE
#DF: DIRTY-FLAG (CURRENT INPUT FIELD CHANGED)
#FD: FILE-DIRTY (CURRENT DATAFILE NOT SAVED)
#PN$(): PLAYER NAMES
#PS(DISCIPLINE-ID,PLAYER-ID): PLAYER SCORES
#PR%(): PLAYER RANKS
#PI:PLAYER INDEX (CURRENTLY SELECTED PLAYER)
#DX:DISCIPLINE MAX INDEX USED (EQUIVALENT TO IM)
#CN$:COMPETITION NAME
#DN$():DISCIPLINE NAMES
#SO():SORT-ORDER
#TS() AND TS:TEMPORARY SCORE ARRAY (FOR ORDERING BY SCORE)
#NM:NAVIGATION MODE(0=PLAYER NAMES,1=SCORES,2=DISCIPLINES,3=COMPETITION NAME,4=FILE DIALOG)
#SC:SHOW CURSOR
#DN$:DATAFILE NAME ON DISK
#CF$:CSV-FILENAME
#PC:PROGRESS INDICATOR CURRENT
#PW:PROGRESS INDICATOR WIDTH (SIZE OF ONE STEP)
#IC:IS-COMPILED. TRUE IF RUNNING A BLITZ COMPILED VERSION
#AT:ACTION TAKEN. TRUE IF ACTION WAS TAKEN INSIDE FILE DIALOG
#EA:END-ADDRESS OF DISK OPERATION
32 PM=18:DM=6:IM=0:DF=0:FD=0:TS=0:PI=0:CN$="":CD=0:SC=-1:DN$="":CF$="":T$="":PC=0:PW=0:AT=0:EA=0:TX=0
#CX:DIRECTORY (CATALOG) COUNTER
#CM:LAST DIRECTORY ENTRY (ARRAY HAS 144 ELEMENTS, BUT NOT ALL ARE USED PROBABLY)
#CC:CURRENT CATALOG (DIRECTORY) INDEX
#CO:CATALOG OFFSET (IE SCROLLING OFFSET)
#A$,B$,L$,H$: USED FOR LISTING DIRECTORY
#PU:INDEX VARIABLE FOR "PRINT USING"
#CI:COLUMN INDEX
#SP:SAVE PENDING (USED WHEN SAVING WITHOUT SET DATAFILE NAME)
#DT$:DRIVE TYPE STRING
#DT:DRIVE TYPE ID (USED FOR DETERMINING ZEROPAGE ADDRESS OF DISK-CHANGE INDICATOR)
#DC:DISK CHANGE INDICATOR
#NN$():USED TO STORE "DER SPIELER", PLAYERNAME PLUS ACCORDING FORMATLINES
#TL$():CONTAINS TEMPLATE FOR PRINTFOX GENERATION
#AC:PREVIOUS ACTION (FOR LOADING DIALOG. LOADING SCORES OR FT-TEMPLATE?)
#PG$:PLAYER GENDER (USED FOR GENERATING PRINTFOX FILE)
#Y1,Y2:Y COORDS FOR PRINTFOX GENERATION
#CU: CURSOR UPDATE POSITION
#C1,C2: LOW AND HIGH BYTES FOR CU
#WW%:WINDOW WIDTH
#WH%:WINDOW HEIGHT
#MN:MENU INDEX
#MN():MENU COORDINATES AND LENGTH
#NW:NEW
33 CX=0:CM=0:A$="":B$="":L$="":H$="":EP$=CHR$(0):CC=0:CO=0:PU=0:CI=0:SP=-1:DT$="":DT=-1:DC=-1:Y1=630:Y2=650
35 TR%=0:SL$="":TC$="":TD$="":PG$="":Y1$="":Y2$="":TR$="":FX=1:WW%=0:WH%=0:MN%=-1:MI%=0:NW=0



100 DIM PN$(DM,PM),PS(DM,PM),PR%(DM,PM),SO(DM,PM),SO$(DM,PM),TS(DM,PM),DN$(DM),IM(DM),CP(8),CL(8),P(8),RC(PM)
101 DIM CE$(143),PU$(4),NN$(PM),TL$(9),WX%(3),W%(2,3),BD$(2),MN%(2,1),MN$(2,6),MS%(2,1),MU$(2)

105 GOSUB 63000
#105 GOSUB 62900

#WX%(0):PROGRESS DIALOG
#    1 :PLAYER,SCORE,RANK
106 WX%(0)=20:WX%(1)=8:WX%(2)=60:WX%(3)=12
#107 WX%(0)=2 :WX%(1)=4:WX%(2)=39:WX%(3)=23

#CP:CURSOR POSITION
# 0:PLAYER NAME
# 1:PLAYER SCORE
# 2:DISCIPLINE LIST
# 3:COMPETITION NAME INPUT
# 4:FILE DIALOG - FILE LIST
# 5:DATAFILE NAME
# 6:RENAME FILE
# 7:SHOW SCOREBOARD
# 8:DELETE FILE

110 CP(0)=6:CP(1)=24:CP(2)=44:CP(3)=15:CP(4)=21:CP(5)=63:CP(6)=22
#CL:COLUMN-LENGTH
112 CL(0)=16:CL(1)=8:CL(2)=23:CL(3)=40:CL(4)=18:CL(5)=13:CL(6)=16

#117 P(0)=:P(1)=:P(2)=:P(3)=1:P(4)=7:P(5)=1:P(6)=

# MN% 0:X-POS
#     1:LENGTH
116 MN%(0,0)=2:MN%(0,1)=6
117 MN%(1,0)=8:MN%(1,1)=7
118 MN%(2,0)=15:MN%(2,1)=10


# PU$() CONTAINS FORMATS FOR VIC-II PREVIEW
120 PU$(0)="  ## ################  ###,###,###"
121 PU$(1)="  ## ################  ###,###,###.#"
122 PU$(2)="  ## ################  ###,###,###.##"
123 PU$(3)="################################################################################"
124 PU$(4)="##  ################  #########  ##"

# SPACES
130 SP$="                                                                                "

# RIGHT BORDER
131 BD$(0)=""

# LEFT BORDER
132 BD$(1)=""

# BOTTOM BORDER
133 BD$(2)=""


# WINDOW DIMENSIONS
# W%0 = FILE DIALOG
# W%1 = NAMES AND SCORES
135 W%(0,0)=10:W%(0,1)=2:W%(0,2)=70:W%(0,3)=22
136 W%(1,0)=2 :W%(1,1)=4:W%(1,2)=39:W%(1,3)=22
137 W%(2,0)=W%(0,0)+6:W%(2,1)=W%(0,1)+3:W%(2,2)=W%(2,0)+27:W%(2,3)=W%(2,1)+9



139 GOSUB 63100


# PRINT SCREEN
140 GOSUB 900
# SAVE SCREEN TO OFF-SCREEN
141 GOSUB 1600


# CHECK FOR STATEFILE
142 GOSUB 32000

#   STATEFILE EXISTS. LOAD PREVIOUS COMPO FILE
143 IF LEN(DN$)>0 THEN BEGIN

#    1120:SHOW PROGRESS BOX
#    1160:LOAD FILE FROM DISK
144  T$="OADING FROM ISK":GOSUB1122:GOSUB1160
145  GOSUB1700:GOSUB 800

146  CI=0:PI=0:P=PI+4

#   NO STATEFILE FOUND. CREATE EMPTY UI
150 BEND: ELSE BEGIN

#    SET SORT ORDER TO ID
151  GOSUB 1200

#    PLACE THE CURSOR. INITIALLY GO TO COMPETITION NAME INPUT. SHOW CURSOR BAR
153  CI=3:P=2

154 BEND


#   WRITE DISCIPLINES, SHOW CURSOR  BAR
155 GOSUB 1800:GOSUB 705

# FILL COLOR ARRAY
156 RC(0)=8:RC(1)=13:RC(2)=9
160 FOR L=3TOPM
165  RC(L)=15
170 NEXT


210 S1$="ER PIELER"
212 S2$="IE PIELERIN"


# 703 REMOVE BAR AND STORE T$ TO ARRAY
#1700 OFF-SCREEN TO ON-SCREEN
#1200 FILL SORT-ORDER ARRAY WITH IDS
# 980 WRITE IDS TO SCREEN
# 800 WRITE ALL VALUES TO FIELDS
#1800 WRITE DISCIPLINES
# 705 SHOW BAR AND READ T$ FROM ARRAY



220 DO
222 GETKEY I$

230 IF MN%>=0 THEN GOSUB 55000:GOTO 410

# CHECK ALL FOR FILE-LOADING DIALOG (WHERE CI=4)
240 IF CI=4 THEN GOSUB 56000:IF AT THEN AT=0:SC=-1:GOTO 399



# NUMERIC
284 IF ASC(I$)>47 THEN IF ASC(I$)<58 THEN IF INSTR(NI$,CHR$(CI))>0 THEN GOSUB 540:GOTO 410
# ALPHABETICAL LOWER CASE
285 IF ASC(I$)>64 THEN IF ASC(I$)<91 THEN IF INSTR(AI$,CHR$(CI))>0 THEN GOSUB 540:GOTO 410
# ALPHABETICAL UPPER CASE
286 IF ASC(I$)>192 THEN IF ASC(I$)<219 THEN IF INSTR(AI$,CHR$(CI))>0 THEN GOSUB 540:GOTO 410

# DOWN
290 IF I$=CHR$(17) THEN IF INSTR(C1$,CHR$(CI))>0 THEN GOSUB 420:GOTO 410
# UP
291 IF I$=CHR$(145) THEN IF INSTR(C1$,CHR$(CI))>0 THEN GOSUB 470:GOTO 410
# RIGHT
292 IF I$=CHR$(29) THEN IF INSTR(C2$,CHR$(CI))>0 THEN GOSUB 630:GOTO 410
# LEFT
293 IF I$=CHR$(157) THEN IF INSTR(C2$,CHR$(CI))>0 THEN GOSUB 670:GOTO 410


# DELETE CHAR
297 IF ASC(I$)=20 THEN BEGIN
298  IF INSTR(NI$,CHR$(CI))>0 THEN GOSUB 590:GOTO 300
299  IF INSTR(AI$,CHR$(CI))>0 THEN GOSUB 590
300 BEND:GOTO 410



301 IF I$=" " THEN GOSUB 540:GOTO 410
302 IF I$="-" THEN GOSUB 540:GOTO 410
303 IF I$="." THEN GOSUB 520:GOTO 410






# RETURN KEY
#   SAVE DISCIPLINE NAME
340 IF I$=CHR$(13) THEN IF CI=2 THEN GOSUB703:CI=0:PI=0:P=PI+4:GOSUB1200:GOTO 399

#   SAVE COMPETITION NAME
341 IF I$=CHR$(13) THEN IF CI=3 THEN IF LEN(T$)>0 THEN GOSUB703:CI=0:PI=0:P=PI+4:GOSUB705:GOTO 410

#   SAVE DATAFILE NAME
342 IF I$=CHR$(13) THEN IF CI=5 THEN GOSUB703:GOSUB 1000:DC=-1:CI=0:PI=0:P=PI+4:GOTO399

# CONFIRM RENAMING FILE
343 IF I$=CHR$(13) THEN IF CI=6 THEN GOSUB 2500:GOTO 410

# CONFIRM DELETING FILE
#344 IF I$=CHR$(13) THEN IF CI=8 THEN GOSUB 2550:GOTO 410


#399 GOSUB 1700:GOSUB 800:GOSUB 1800:GOSUB705:GOTO 410
# COMMODORE + NUMBER KEYS
# COMMODORE +1
350 IF I$=CHR$(129) THEN GOSUB703:CD=0:PI=0:P=PI+4:GOSUB1200:GOTO 399
# COMMODORE + 2-6
351 IF ASC(I$)>148 THEN IF ASC(I$)<155 THEN GOSUB703:CD=ASC(I$)-148:PI=0:P=PI+4:GOSUB1200:GOTO 399



# CONTROL +F FOR FILE MENU
352 IF I$=CHR$(6) THEN IF INSTR(SM$,CHR$(CI))>0 THEN MN%=0:GOSUB 61000:GOTO410

# CONTROL +O FOR ORDER MENU
353 IF I$=CHR$(15) THEN IF INSTR(SM$,CHR$(CI))>0 THEN MN%=1:GOSUB 61000:GOTO410

# CONTROL +G FOR GENERATE MENU
354 IF I$=CHR$(7) THEN IF INSTR(SM$,CHR$(CI))>0 THEN MN%=2:GOSUB 61000:GOTO410



# F2:COMPETITION NAME
355 IF ASC(I$)=137 THEN GOSUB 703:CI=3:P=2:GOSUB 705:GOTO 410

# F4:DISCIPLINES
356 IF ASC(I$)=138 THEN GOSUB 703:CI=2:P=CD+4:GOSUB 705:GOTO 410

# F8:DELETE ENTRY
357 IF ASC(I$)=140 THEN GOSUB 2000:GOTO 399



# COMMODORE+E FOR CSV-EXPORT OF CURRENT DISCIPLINE
358 IF I$=CHR$(177) THEN GOSUB 2200:GOTO 399

# COMMODORE+G FOR PRINTFOX-GENERATOR
359 IF I$=CHR$(165) THEN AC=1:GOSUB1600:GOSUB1100:GOTO410

# COMMODORE+S FOR SAVE
360 IF ASC(I$)=174 THEN BEGIN
361  IF LEN(DN$)=0 THEN GOSUB2100:GOTO399:ELSE GOSUB 1000:GOTO 399
362 BEND

# COMMODORE+A FOR SAVE AS...
363 IF ASC(I$)=176 THEN GOSUB 2100:GOTO 399

# COMMODORE+L FOR LOAD
364 IF ASC(I$)=182 THEN AC=0:GOSUB1600:GOSUB 1100:GOTO 410

# CBM+P - PREVIEW
365 IF I$=CHR$(175) THEN GOSUB 1900:GOTO 399

# CBM+N - NEW COMPETITION
366 IF I$=CHR$(170) THEN NW=-1:SCRATCH "POWERCOMP.STATE",U(DU):GOTO 410

# CBM+X - EXIT PROGRAM
367 IF I$=CHR$(189) THEN 55350



# ORDER BY ID
368 IF ASC(I$)=133 THEN T$="ORTING BY ":GOSUB1120:GOSUB 1200:GOTO 399

# ORDER BY PLAYER NAME
# 1300:SORT ALPHABETICALLY
369 IF ASC(I$)=134 THEN GOSUB 1300:GOTO 399

# ORDER BY PLAYER SCORE
370 IF ASC(I$)=135 THEN GOSUB 1400:GOTO 399

# REVERSE ORDER OF CURRENT LIST
371 IF ASC(I$)=136 THEN GOSUB 1500:GOTO 399



398 GOTO 410



# FINAL STEP FOR ORDERING
# 1700 CLEAR SCREEN AND RESTORE GRID
# 800 FILL NAMES AND SCORES
# 1800: WRITE LIST OF DISCIPLINES
# 705: DRAW CURSOR BAR

399 GOSUB 1700:GOSUB 800:GOSUB 1800:GOSUB705
## PUT NOTHING IN BETWEEN THESE TWO LINES (399 AND 410)
410 LOOP UNTIL NW

415 CLR:GOTO 17



# DOWN (PLAYER NAME AND SCORE LIST)
420 IF CI=2 THEN 430
421 IF CI=4 THEN 440
422 IF CI>2 THEN 426

423 GOSUB 703
424 PI=PI+1:IF PI>IM(CD)+1 THEN PI=0
425 P=PI+4
426 GOSUB 705
427 RETURN

# DOWN (DISCIPLINE LIST)
430 GOSUB 703
431 CD=CD+1:IF CD>DM THEN CD=0
432 P=CD+4
433 GOSUB 705
434 RETURN

# DOWN (FILE LIST)
# TS:TEMP SCROLL (TS=TRUE MEANS LIST CAN BE SCROLLED)
# TE:TEMP END (LAST SELECTABLE LINE INDEX) (0-9)
# CC:SELECTED LINE INDEX ON SCREEN (0-9)
# CO:OFFSET OF FIRST SELECTED LINE WHEN SCROLLING (CC)
440 GOSUB 703
441 CC=CC+1

442 TE=CM-2:TS=0:IF TE > 9 THEN TE=9:TS=-1

#   CHECK WHAT TO DO WHEN BOTTOM-MOST ENTRY IS REACHED
450 IF CC>TE THEN BEGIN

#    CHECK FOR ROLL OVER FROM TOP
452  IF NOT TS THEN CC=TE:GOTO 457

#    CHECK FOR SCROLL DOWN
454  IF CO+9<CM-2 THEN CO=CO+1:CC=TE:GOSUB 9770:ELSE CC=TE:GOTO 457

457 BEND

458 P=CC+5:GOSUB 705
#458 GRAPHIC0:SLOW:PRINT CO"+"CC"<"(CM-2):GRAPHIC5

459 RETURN




# UP
470 IF CI=2 THEN 480
471 IF CI=4 THEN 490
472 IF CI>2 THEN 477

473 GOSUB 703
474 PI=PI-1:IF PI<0 THEN PI=IM(CD)+1
475 P=PI+4
476 GOSUB 705
477 RETURN

# UP (DISCIPLINE LIST)
480 GOSUB 703
481 CD=CD-1:IF CD<0 THEN CD=DM
482 P=CD+4
483 GOSUB 705
484 RETURN

# UP (FILE LIST)
490 GOSUB 703
491 CC=CC-1:IF CC<0 THEN CC=0:IF CO>0 THEN CO=CO-1:GOSUB9770
492 P=CC+5
493 GOSUB 705
499 RETURN


# FOR SCORE, ONLY ONE FRACTION POINT ALLOWED
520 IF CI<>1 THEN 540
530 IF INSTR(T$,".")>0 THEN PRINT CHR$(7);:GOTO 580

# ALPHANUMERIC
540 IF CI<2 THEN IF LEN(T$)=16 THEN PRINT CHR$(7);:GOTO 580
545 IF CI>=2 THEN IF LEN(T$)=CL(CI) THEN PRINT CHR$(7);:GOTO 580

550 IF CI=1 THEN IF LEFT$(T$,2)=" 0" THEN T$=" "+MID$(T$,3)
560 T$=T$+I$:DF=-1:IF NOT FD THEN GOSUB 2400
570 CHAR 1,CP(CI),P,T$
575 GOSUB 780
580 RETURN

# DELETE
590 IF LEN(T$)=0 THEN PRINT CHR$(7);:GOTO 620
600 T$=LEFT$(T$,LEN(T$)-1):DF=-1:IF NOT FD THEN GOSUB 2400
610 CHAR 1,CP(CI),P,T$+" "
615 GOSUB 780
620 RETURN

# RIGHT (FROM PLAYER TO SCORE COLUMN)
630 IF CI<>0 THEN 660
640 GOSUB 703:CI=1
650 VMF 2048+CP(CI)+P*80,207+128,8:GOSUB 760

660 RETURN

# LEFT (FROM SCORE TO PLAYER COLUMN)
670 IF CI<>1 THEN 700
680 GOSUB 703:CI=0
690 GOSUB 705

700 RETURN

# REMOVE CURSOR BAR
703 VMF 2048+CP(CI)+P*80,128,CL(CI):GOSUB 710:GOSUB790:RETURN

# DRAW CURSOR BAR
705 VMF 2048+CP(CI)+P*80,207,CL(CI):GOSUB 760:GOSUB780:RETURN



# STORE TO ARRAY
710 IF NOT DF THEN 732
712 DF=0
714 IF CI=0 THEN PN$(CD,SO(CD,PI))=T$:GOTO730
716 IF CI=1 THEN PS(CD,SO(CD,PI))=VAL(T$):GOTO730
718 IF CI=2 THEN DN$(CD)=T$:IFDX<CD+1 THEN DX=CD+1:GOTO 732
720 IF CI=3 THEN CN$=T$:GOTO 732
722 IF CI=4 THEN 732
724 IF CI=5 THEN DN$=T$:GOTO 732
726 IF CI=6 THEN TT$=T$:GOTO 732
728 IF CI=8 THEN TT$=T$:GOTO 732
730 IF IM(CD)<PI THEN IM(CD)=PI
732 RETURN

# READ VALUE INTO T$
760 IF CI=0 THEN T$=PN$(CD,SO(CD,PI))
762 IF CI=1 THEN T$=STR$(PS(CD,SO(CD,PI)))
764 IF CI=2 THEN T$=DN$(CD)
766 IF CI=3 THEN T$=CN$
768 IF CI=4 THEN 776
770 IF CI=5 THEN T$=DN$
#                     1150:EXTRACT FILENAME FROM DIRECTORY LINE
772 IF CI=6 THEN GOSUB1150:T$=DN$
774 IF CI=8 THEN GOSUB1150:T$=DN$
776 RETURN

# PLACE CURSOR
780 IF NOT SC THEN 789
781 RGW 10,104
782 CU=CP(CI)+P*80+LEN(T$):C1=INT(CU/256):C2=CU-C1*256
# 14 HIGH, 15 LOW
#783 SYN10,104,14,C1,15,C2
783 RGW14,C1:RGW15,C2
#782 VMO 2048+CU,16
#784 VMW CU,160
789 RETURN

# REMOVE CURSOR
790 IF NOT SC THEN 799
791 RGW 10,32
#791 VMA 2048+CU,239
#792 VMW CU,32
799 RETURN

# WRITE NAMES AND SCORES TO FIELDS
800 W%=1:WINDOW W%(W%,0),W%(W%,1),W%(W%,2),W%(W%,3),1:COLOR 5,1


805 FOR L=0 TO IM(CD)
# IDS
806  VL=SO(CD,L)
807  IF VL>9 THEN L$=MID$(STR$(VL),2):GOTO 809
808  L$=" "+MID$(STR$(VL),2)
809  PRINT USING PU$(4);L$,PN$(CD,SO(CD,L)),STR$(PS(CD,SO(CD,L))),PR%(CD,L)

#810  CHAR 1,CP(0),4+L,PN$(CD,SO(CD,L))
#820  CHAR 1,CP(1),4+L,STR$(PS(CD,SO(CD,L)))
#825  CHAR 1,35,4+L,STR$(PR%(CD,L))
830 NEXT

835 PRINT CHR$(19)CHR$(19);

# AND COMP NAME AND FILENAME
840 CHAR 1,CP(3),2,CN$
850 CHAR 1,CP(5),2,DN$
860 IF FD THEN CHAR1,77,1,"*"

890 RETURN



# CREATE SCREEN
900 PRINT "";:COLOR5,13
905 PRINT "                                                                            ";
910 PRINT "                                                                              ";
915 PRINT "                                                                             ";
920 FOR L=1TO20
925 PRINT "                                                                             ";
930 NEXT
932 PRINT "BY OODWELL";
933 CHAR 1,40,11,""

934 COLOR 5,1
935 CHAR 1,2,0,"                       OWER OMPETITION ANAGER V1.3                       "
936 VMF 2048+2,192,76

937 CHAR 1,2,1," ILE  RDER  ENERATE "
#940 BANK0:RTV BE+2,81,PEEK(BE+1)
#941 VMF 2048+81,128,PEEK(BE+1):BANK15



942 CHAR 1,2,2,"OMPETITION:"
943 CHAR 1,58,2,"ILE:"
944 CHAR 1,2,3,CHR$(2)+""
945 CHAR 1,6,3,"LAYER"
946 CHAR 1,24,3,"CORE"
947 CHAR 1,34,3,"ANK"

948 CHAR 1,42,3,"ISCIPLINES"


949 PRINT CHR$(130);


#950 WINDOW 42,12,78,22,1
#952 PRINT "1: RDER BY  (SC.)"
#954 PRINT "3: RDER BY LAYER AME (SC.)"
#956 PRINT "5: RDER BY CORE (ESC.)"
#958 PRINT "7: EVERSE RDER"
#960 PRINT "2: DIT OMPETITION AME"
#962 PRINT "4: DIT ISCIPLINES"
#964 PRINT "8: ELETE LAYER NTRY"
#966 PRINT "=+: AVE TO ISK,  =+: AVE AS..."
#968 PRINT "=+: OAD FROM ISK,=+: XPORT "
#970 PRINT "=+1-7: UMP TO ISCIPLINE"
#972 PRINT "=+: REVIEW ON 40 OL ISPLAY"CHR$(19)CHR$(19);

970 PRINT CHR$(19)CHR$(19);

975 COLOR 5,13

979 RETURN



# SAVE TO SEQ FILE
# IF NO FILENAME IS SET, GO TO "SAVE AS" ROUTINE
1000 T$="AVING TO ISK":GOSUB1120
1001 OPEN1,DU,3,"@0:"+DN$+",W"

# FAILSAFE
1002 IF LEN(CN$)=0 THEN CN$="UNNAMED COMPETITION"

# COMPETITION NAME
1006 PRINT#1,CN$

# NR OF DISCIPLINES
1009 PRINT#1,STR$(DX)

1010 PC=0:PW=38/(DX+1)

1012 FOR D=0 TO DX

# BEGIN DISCIPLINE BLOCK
# NAME OF DISCIPLINE
1015  PRINT#1,DN$(D)

# NUMBER OF NAME-SCORE ENTRIES
1018  PRINT#1,IM(D)

1021  FOR L=0 TO IM(D)
1024   PRINT#1,PN$(D,L)
1027   PRINT#1,PS(D,L)
1030  NEXT

1032  PC=D*PW:GOSUB 1140

1033 NEXT

1036 CLOSE1


# CLEAR "DIRTY" ASTERISK (FILE CHANGE INDICATOR)
1042 GOSUB 2410

1099 RETURN


# DISPLAY FILE SELECTION DIALOG
1100 IF DT THEN GOSUB 9800
1101 GOSUB703:CI=4:SC=0:CC=0:CO=0:P=CC+5:REM WINDOW 10,2,70,22,1:COLOR5,13

1103 W%=0:T$="OAD ILE":GOSUB 60000

1110 COLOR 5,1
1112 CHAR 1,1,19," :ANCEL  ETURN:OAD ILE   :ELETE ILE  :ENAME ILE "

1114 IF DC=-1 THEN DC=0:GOSUB 10000:GOTO 1119

1115 GOSUB 9900:REM CHECK DISK CHANGE FLAG
1116 IF DC=1 THEN GOSUB 10000:ELSE GOSUB 9700

1118 COLOR 5,13
1119 RETURN


# DISPLAY PROGRESS INDICATOR DIALOG
1120 IF INSTR(SD$,CHR$(CI))>0 THEN GOSUB 1600

1122 GOSUB 703:WINDOW WX%(0),WX%(1),WX%(2),WX%(3),1
1124 PRINTCHR$(27)"M";
1125 PRINT"";
1126 CHAR 1,0,1
1127 PRINT"";
1128 PRINT""CHR$(27)"L";

1130 T=(40-LEN(T$))/2
1132 CHAR1,1,1,""+LEFT$(SP$,T-1)+T$+LEFT$(SP$,T-1)+""

1134 PRINT CHR$(19)CHR$(19);

1139 RETURN



# UPDATE PROGRESS INDICATOR
1140 T$=LEFT$(PI$,PC)
1142 T$=T$+LEFT$(SP$,38-PC)

1144 CHAR 1,2+WX%(0),2+WX%(1),T$


1146 RETURN



# EXTRACT FILENAME FROM DIRECTORY LINE
1150 T$=CE$(CO+CC+1)

1154 P1=INSTR(T$,CHR$(34))+1
1155 P2=INSTR(T$,CHR$(34),P1)-P1
1156 DN$=MID$(T$,P1,P2)
1159 RETURN

# SET CURSOR VALUES FOR AFTER CLOSING DIALOG
1160 REM "CI=0:PI=0:P=PI+4:SC=-1"



# LOAD SELECTED HIGHSCORE-FILE FROM DISK
1180 OPEN1,DU,3,DN$+",R"
1181 INPUT#1,CN$
1182 INPUT#1,DX
1183 PW=38/(DX+1):PC=0:GOSUB1140

1184 FOR D=0 TO DX
1185  INPUT#1,DN$(D)
1186  INPUT#1,IM(D)

1187  FOR L=0 TO IM(D)
1188   INPUT#1,PN$(D,L)
1189   INPUT#1,PS(D,L)
1190  NEXT
1191  PC=(D+1)*PW:GOSUB 1140

1192 NEXT
1193 CLOSE1

1194 OPEN1,DU,2,"@0:POWERCOMP.STATE,S,W":PRINT#1,DN$:CLOSE1

# CLEAR DATAFILE DIRTY FLAG
1195 GOSUB 2410

1198 GOSUB 1200


1199 RETURN


# FILL SORT-ORDER ARRAY WITH IDS
1200 FOR L=0 TO PM
1202  SO(CD,L)=L
1208 NEXT

1210 FOR L=0 TO IM(CD)
1212  PR%(CD,L)=0
1214 NEXT

1219 RETURN


# FILL SORT-ORDER ARRAY ALPHABETICAL (IE ORDER BY NAME)
# USES SO$() AND SO$ AS TEMPORARY VARIABLES FOR ORDERING
# SO() AND SO ARE USED PERMANENTLY IN THE REST OF THE PROGRAM
# KG:KEEP GOING
1300 T$="ORTING BY AME":GOSUB1120

1301 FOR L=0 TO IM(CD):SO(CD,L)=L:SO$(CD,L)=PN$(CD,L):NEXT
1302 DO:KG=0
1303  FOR L=0 TO IM(CD)-1
1304   IF FNPN(L) > FNPN(L+1) THEN BEGIN
1305    SO=SO(CD,L):SO(CD,L)=SO(CD,L+1):SO(CD,L+1)=SO:KG=-1
1306    SO$=SO$(CD,L):SO$(CD,L)=SO$(CD,L+1):SO$(CD,L+1)=SO$
1307   BEND
1308  NEXT
1309 LOOP WHILE KG

1310 FOR L=0 TO IM(CD)
1312  PR%(CD,L)=0
1314 NEXT

1399 RETURN

# FILL SORT-ORDER ARRAY WITH SCORE (IE ORDER BY SCORE)
1400 T$="ORTING BY CORE":GOSUB1120

1405 FOR L=0 TO IM(CD):SO(CD,L)=L:TS(CD,L)=PS(CD,L):NEXT
1410 DO:KG=0
1415  FOR L=0 TO IM(CD)-1
1420   IF TS(CD,L) < TS(CD,L+1) THEN BEGIN
1425    SO=SO(CD,L):SO(CD,L)=SO(CD,L+1):SO(CD,L+1)=SO:KG=-1
1430    TS=TS(CD,L):TS(CD,L)=TS(CD,L+1):TS(CD,L+1)=TS
1435   BEND
1440  NEXT
1445 LOOP WHILE KG

#    FILL RANKS ARRAY (CHECK FOR SAME POINTS BETWEEN PLAYERS)
1450 T=1:REM TEMP VAR TO HOLD CURRENT RANK
1455 PR%(CD,0)=T:T=T+1
1460 FOR L=1 TO IM(CD)

1465  IF PS(CD,SO(CD,L))=PS(CD,SO(CD,L-1)) THEN PR%(CD,L)=PR%(CD,L-1):ELSE PR%(CD,L)=T
1470  T=T+1

1475 NEXT

1499 RETURN

# REVERSE SORT-ORDER ARRAY (TOGGLE ASC/DESC)
1500 T$="EVERSING ORT RDER":GOSUB1120

1505 L1=0
1510 FOR L=IM(CD) TO 0 STEP -1
1515  TS(CD,L)=SO(CD,L1)
1520  L1=L1+1
1525 NEXT
1530 FOR L=0 TO IM(CD)
1535  SO(CD,L)=TS(CD,L)
1540 NEXT

1542 IF PR%(CD,0)>0 THEN 1450

1599 RETURN

# COPY SCREEN TO OFF-SCREEN
1600 VMC 0,4096,2048
1605 VMC 2048,6144,2048
1610 RETURN

# COPY OFF-SCREEN TO SCREEN
1700 REM PRINT "";
1702 VMC 6144,2048,2048
1705 VMC 4096,0,2048
1710 RETURN

# WRITE LIST OF DISCIPLINES
1800 WINDOW 42,4,78,10,1:COLOR 5,1
1805 FOR L=0 TO DX
1810  PRINT MID$(STR$(L+1),2)" "DN$(L)
1815 NEXT
1830 PRINT "";

1840 VMF 2048+CP(2)+(4+CD)*80,207,CL(2)

1899 RETURN

# SHOW SCOREBOARD ON VIC SCREEN
1900 IF PR%(CD,0)=0 THEN GOSUB 1400:GOSUB 1700:GOSUB 800:GOSUB 1800:GOSUB705

1901 T$="HOWING SCOREBOARD ON 40 COL DISPLAY":GOSUB 1122

1902 CHAR 1,2+WX%(0),2+WX%(1),"RESS  TO CHANGE NR OF ECIMALS"
1903 CHAR 1,2+WX%(0),3+WX%(1),"NY OTHER KEY CLOSES COREBOARD"



1905 GRAPHIC0:COLOR5,15:PRINTCHR$(14)"":SLOW

#1909 PRINT USING "   =##################################";CN$
1910 PRINT USING "   =##################################";DN$(CD)
1915 PRINT:IX=1
1920 FOR L=0 TO IM(CD)
1921  TS$=PN$(CD,SO(CD,L))
1922  IF LEN(TS$)<3 THEN 1929
1923  TS=PS(CD,SO(CD,L))
1924  COLOR 5,RC(PR%(CD,IX-1)-1)
1925  PRINT USING PU$(PU);PR%(CD,IX-1),TS$,TS
1926  IX=IX+1
1929 NEXT


1990 GETKEY I$
1992 IF I$="D" THEN BEGIN
1994  PU=PU+1:IF PU>2 THEN PU=0
1996 BEND:GOTO 1905

1998 FAST:PRINT"":GRAPHIC5:COLOR 5,2:CI=0
1999 RETURN



# DELETE PLAYER NAME-SCORE ENTRY
2000 IX=SO(CD,PI)
2005 FOR L=IX TO IM(CD)-1
2010  PN$(CD,SO(CD,L))=PN$(CD,SO(CD,L+1))
2011  PS(CD,SO(CD,L))=PS(CD,SO(CD,L+1))
2015 NEXT
2016 PN$(CD,SO(CD,IM(CD)))=""
2017 PS(CD,SO(CD,IM(CD)))=0
2020 IM(CD)=IM(CD)-1
2022 GOSUB 2400
2099 RETURN



# SAVE AS
2100 GOSUB 703
2102 P=2:CI=5:GOSUB 705

2199 RETURN

# EXPORT TO CSV

2200 T$="XPORTING TO ":GOSUB1120
2201 CF$=LEFT$(DN$(CD),12)+".CSV"

2204 OPEN1,DU,3,"@0:"+CF$+",P,W"

2206 IX=1:PW=38/IM(CD)
2208 FOR L=0 TO IM(CD)
2210  TS$=PN$(CD,SO(CD,L))
2212  IF LEN(TS$)<3 THEN 2222
2214  TS=PS(CD,SO(CD,L))
2218  T$=MID$(STR$(IX),2)+";"+TS$+";"+MID$(STR$(TS),2)
2219  GOSUB 2300:PRINT#1,T2$CHR$(13)CHR$(10);
2220  IX=IX+1
2221  PC=L*PW:GOSUB1140
2222 NEXT

2224 CLOSE 1

2299 RETURN


# CONVERT FROM PETSCII TO ASCII
2300 T2$=""
2305 FOR X=1 TO LEN(T$)
2310  C$=MID$(T$,X,1):A=ASC(C$)
2320  IF A>=193 AND A<=218 THEN A=A-128:T2$=T2$+CHR$(A):GOTO 2340
2325  IF A>=65 AND A<=90 THEN A=A+32:T2$=T2$+CHR$(A):GOTO 2340
2330  T2$=T2$+C$
2340 NEXT

2399 RETURN


# SET DATAFILE DIRTY FLAG
2400 FD=-1:CHAR1,77,1,"*":RETURN

# CLEAR DATAFILE DIRTY FLAG
2410 FD=0:CHAR1,77,1," ":RETURN


# RENAME FILE
#    KEEP INPUT OF NEW NAME (T$ IS USED ELSEWHERE)
2500 TT$=T$
#    EXTRACT FILENAME FROM SELECTED CATALOG LINE (INTO DN$)
2501 GOSUB 1150
2502 CF$="R:"+TT$+"="+DN$

2505 OPEN1,DU,15,CF$:CLOSE1

# ASSEMBLE NEW CATALOG LINE (BLOCKS, NAME, TYPE)
2507 T$=LEFT$(CE$(CC+1),6)+TT$+CHR$(34)

2510 CE$(CC+1)=T$+LEFT$(SP$,24-LEN(T$))+MID$(CE$(CC+1),25)

2512 GOSUB 703
2519 GOTO 1100


# DELETE FILE
2550 TT$=T$

#    EXTRACT FILENAME FROM SELECTED CATALOG LINE (INTO DN$)
2555 GOSUB 1150
2560 SCRATCH (DN$),U(DU)

2565 DC=-1

2580 GOTO 1100



# LIST DISK CATALOG FROM MEMORY
# TE:TEMPORARY END (HIGHEST VALUE FOR P)
9700 TE=CM-1:IF TE > CO+10 THEN TE=CO+10

# DISPLAY LINE WITH DISK ID (ONLY WHEN NOT SCROLLING)
9704 CHAR 1,6,2,""+CE$(0)

# DISPLAY REGULAR ENTRIES
9705 FOR CX=1 TO 10
9720  CHAR 1,6,2+CX,""+CE$(CX+CO)
9730 NEXT

# DISPLAY FREE BLOCKS (ONLY WHEN NOT SCROLLING)
9735 CHAR 1,6,2+11,CE$(CM)

# P:SCREEN LOCATION OF SELECTION BAR
# CC:SELECTED LINE (1-10)
# CO:CATALOG OFFSET (SKIPPED LINES B/C SCROLLING)
9740 P=CC+5
9745 GOSUB 705

9750 PRINT""CHR$(19)CHR$(19);


9769 RETURN

# DISPLAY REGULAR ENTRIES
9770 W%=2: WINDOW W%(W%,0),W%(W%,1),W%(W%,2),W%(W%,3),1:PRINT CHR$(27)"M";
9772 FOR CX=1 TO 10
9774  CHAR 1,0,CX-1,""+CE$(CX+CO)
9776 NEXT
9778 PRINT CHR$(19)CHR$(19)""CHR$(27)"L";

9779 RETURN


# GET DRIVE TYPE (1541, 1571, 1581, SD2IEC, ETC)
# TAKEN FROM HTTPS://WWW.LEMON64.COM/FORUM/VIEWTOPIC.PHP?T=46509
9800 A=65331:DT$="UNKNOWN":DT=-1
9810 HI=INT(A/256)
9820 LO=A-256*HI
9830 OPEN1,DU,15

9840 PRINT#1,"M-R";CHR$(LO);CHR$(HI)
9850 GET#1,A$
9860 T=ASC(A$)
9870 IF T=108 THEN DT$="1581":DT=1
9872 IF T=173 THEN DT$="1571":DT=0
9874 IF T=170 THEN DT$="1541":DT=0
9876 IF T=76 THEN DT$="1541-II":DT=0

#9910 PRINT"DRIVE TYPE:";DT$;

9880 CLOSE1

9899 RETURN


# CHECK FOR DISK-CHANGE FLAG
9900 OPEN1,DU,15

9905 IF DT=0 THEN DC=DEC("1C"):ELSE IF DT=1 THEN DC=DEC("25")

9910 PRINT#1,"M-R";CHR$(DC);CHR$(0)
9920 GET#1,A$

9930 DC=ASC(A$)
9980 CLOSE1

9990 RETURN


# DISK DIRECTORY LISTING ROUTINE
#CV:CURSOR-VISIBLE
10000 CHAR 1,6,2+11,CHR$(15)+"EADING ISK..."+CHR$(143)

10001 OPEN 1,DU,0,"$":CX=0:CV=0
10002 GET#1,A$,A$
10004 GET#1,A$,A$,H$,L$:IF ST THEN 10026

# BEGIN OF LINE
10006 CE$(CX)=MID$(STR$(ASC(H$+EP$)+256*ASC(L$+EP$))+" ",2)

# NEXT TWO BYTES FROM CONTENT
10008 DO:GET#1,A$,B$
10010 IF B$ THEN CE$(CX)=CE$(CX)+A$+B$:LOOP WHILE ST=0

# END OF LINE
10012 CE$(CX)=CE$(CX)+A$

# IF NO HYPHEN ON POSITION 6 OF LINE ITEM, THIS IS THE LAST LINE
10013 IF CX>0 THEN IF MID$(CE$(CX),6,1)<>CHR$(34) THEN CHAR 1,6,2+11,""+CE$(CX)+"":GOTO 10024

10016 IF CX<11 THEN CHAR 1,6,2+CX,""+CE$(CX):ELSE 10024
10018 IF NOT CV THEN IF CX=1 THEN GOSUB 705:CV=-1

#10020 GET I$:IF LEN(I$)=0 THEN 10024
#10021 IF I$=CHR$(17) THEN GOSUB 10260:GOTO 10024
#10022 IF I$=CHR$(145) THEN GOSUB 10320:GOTO 10024

# ENTER
#10023 IF I$=CHR$(13) THEN GOSUB 10026:T$="OADING FROM ISK":GOSUB1120:GOSUB1150:GOSUB1160:AT=-1:GOTO 10026

10024 CX=CX+1:IF CX<145 THEN GOTO 10004
10026 CLOSE 1:CM=CX-1

10028 PRINT""CHR$(19)CHR$(19);
10029 RETURN

# DO-LOOP GET#: 164
# GOTO GET#:    310


# DOWN (EQUIVALENT TO 440)
#10250 IF I$=CHR$(17) THEN BEGIN
10260  VMF 2048+CP(CI)+P*80,128,CL(CI)
10270  CC=CC+1:IF CC>CX-2 THEN CC=CX-2
10280  P=CC+5
10290  VMF 2048+CP(CI)+P*80,207,CL(CI)
10300 RETURN

# UP (EQUIVALENT TO 490)
#10310 IF I$=CHR$(145) THEN BEGIN
10320  VMF 2048+CP(CI)+P*80,128,CL(CI):
10330  CC=CC-1:IF CC<0 THEN CC=0
10340  P=CC+5
10350  VMF 2048+CP(CI)+P*80,207,CL(CI)
10360 RETURN


##########################
# READ CHARSET FROM FILE #
##########################
# 7:VERT SYNC POSITION
# 4:TOTAL NR OF SCREEN ROWS (ALSO INVISIBLE)
29800 RGW7,28:RGW4,31:RGW36,0
#  9:CHARACTER HEIGHT IN SCANLINES (+1)
# 11:CURSOR HEIGHT (+1) - JUST SET TO MAX
# 23:CHAR VERT SIZE IN SCANLINES
# 29:UNDERLINE SCANLINE
29805 RGW9,9:RGW23,10:RGW11,15:RGW5,0:RGW29,8

29810 PRINT "LOADING CHARSET...";:BLOAD "CHARSET2.10",B0,P(BE):PRINT "DONE"
29820 RTV BE,12288,2048
29830 RETURN

######################
# UPDATE VDC CHARSET #
######################

# 7:VERT SYNC POSITION
# 4:TOTAL NR OF SCREEN ROWS (ALSO INVISIBLE)
29900 RGW7,28:RGW4,31:RGW36,0
#  9:CHARACTER HEIGHT IN SCANLINES (+1)
# 11:CURSOR HEIGHT (+1) - JUST SET TO MAX
# 23:CHAR VERT SIZE IN SCANLINES
# 29:UNDERLINE SCANLINE
29905 RGW9,9:RGW23,10:RGW11,15:RGW5,0:RGW29,8

# SHIFT ALL CHARACTERS DOWN BY ONE SCANLINE
#29910 FOR L=8192 TO 10239 STEP 16
#29915  FOR IC=7 TO 0 STEP -1
#29920   VMC L+IC,L+IC+1,1
#29925  NEXT
#29927  VMW L,0
#29930 NEXT

#29935 FOR L=10240 TO 12287 STEP 16
#29940  FOR IC=7 TO 0 STEP -1
#29945   VMC L+IC,L+IC+1,1
#29950  NEXT
#29955  VMW L,255:VMW L+9,255
#29960 NEXT

29910 FOR L=12288 TO 14335 STEP 16
29912  FOR IC=7 TO 0 STEP -1
29914   VMC L+IC,L+IC+1,1
29916  NEXT
29918  VMW L,0
29920 NEXT

#29974 FOR L=14336 TO 16385 STEP 16
#29976  FOR IC=7 TO 0 STEP -1
#29978   VMC L+IC,L+IC+1,1
#29980  NEXT
#29982  VMW L,255:VMW L+9,255
#29984 NEXT

29930 L=12288

# CHAR 93 (VERTICAL BAR)
29932 VMF L+93*16,24,10

# CHAR 96 (FILLED RECTANGLE)
29934 VMF L+96*16,255,10

# CHAR 109 (BOTTOM-LEFT CORNER)
29936 VMW L+109*16,24
# CHAR 110 (TOP-RIGHT CORNER)
29938 VMW L+110*16+9,24

# CHAR 112 (TOP-LEFT CORNER
29940 VMW L+112*16+9,24

# CHAR 113 (CROSSING TO TOP)
29942 VMW L+113*16,24

# CHAR 114 (CROSSING TO BELOW)
29944 VMW L+114*16+9,24

# CHAR 115 (CROSSING TO THE LEFT)
29946 VMW L+115*16,24:VMW L+115*16+9,24

# CHAR 107 (CROSSING TO THE RIGHT)
29948 VMW L+107*16,24:VMW L+107*16+9,24

# CHAR 125 (BOTTOM-RIGHT CORNER)
29950 VMW L+125*16,24

# CHAR 91 AND 92 - MAKE IT TO COMMODORE LOGO
#7,14,28,28,28,14,7,0
#192,62,60,0,60,62,192,0

29952 VMW L+91*16,0:VMW L+91*16+1,7:VMW L+91*16+2,14:VMW L+91*16+3,28
29954 VMW L+91*16+4,28:VMW L+91*16+5,28:VMW L+91*16+6,14:VMW L+91*16+7,7:VMW L+91*16+8,0

29956 VMW L+92*16,0:VMW L+92*16+1,192:VMW L+92*16+2,62:VMW L+92*16+3,60
29958 VMW L+92*16+4,0:VMW L+92*16+5,60:VMW L+92*16+6,62:VMW L+92*16+7,192:VMW L+92*16+8,0


#29952 VMW L+91*16,0:VMW L+91*16+1,31:VMW L+91*16+2,56:VMW L+91*16+3,112
#29954 VMW L+91*16+4,112:VMW L+91*16+5,112:VMW L+91*16+6,56:VMW L+91*16+7,31:VMW L+91*16+8,0

#29956 VMW L+92*16,0:VMW L+92*16+1,0:VMW L+92*16+2,248:VMW L+92*16+3,240
#29958 VMW L+92*16+4,0:VMW L+92*16+5,240:VMW L+92*16+6,248:VMW L+92*16+7,0:VMW L+92*16+8,0


29970 VTR L,BE,2048
29972 BSAVE "@CHARSET2.10",U(DU),P(BE) TO P(BE+2048),B0

29999 RETURN

######################
# PRINTFOX GENERATOR #
######################

# READ TEMPLATE FILE FOR CERTIFICATE

# SELECT FILENAME
30000 GOSUB 1120

# READ FIRST TWO BYTES, CHECK FILETYPE, POKE THEM TO MEM
30005 OPEN 1,DU,0,DN$
30010  GET#1,A$,B$
30015  IF A$<>CHR$(84) THEN STOP
30020 CLOSE1

30025 BANK0:POKE DEC("1300"),ASC(A$):POKE DEC("1301"),ASC(B$):BANK15

# LOAD THE REST OF THE FILE VIA BLOAD (FIRST TWO BYTES ARE ALREADY POKED)
30030 BLOAD (DN$),U(DU),P(DEC("1302")),B0

# ENDADDRESS OF BLOAD
30031 EA=PEEK(174)+PEEK(175)*256
#30032 SLOW:GRAPHIC0:S=EA-DEC("1300"):PRINT "SIZE:"S:GETKEYI$:FAST:GRAPHIC5

# NOT REALLY REQUIRED, AS WE'RE BELOW ADDR 16384
30035 BANK 0
# TX:INDEX OF TEMPL STRINGS
30036 TX=0:TL$(TX)="":PW=38/9

# EXTRACT TEMPLATE STRINGS

#  FIRST TEMPLATE STRING
#  NAME OF THE CHALLENGE

#  SECOND TEMPLATE STRING
#  DATE OF THE CHALLENGE

#  THIRD TEMPLATE STRING
#  DER SPIELER/DIE SPIELERIN

#  FOURTH TEMPLATE STRING
#  PLAYERNAME

#  FIFTH TEMPLATE STRING
#  DISCIPLINE NAME

#  SIXTH TEMPLATE STRING
#  RANK

#  SEVENTH TEMPLATE STRING
#  Y COORDINATE OF "DIE PUNKTE IM UEBERBLICK"

#  EIGTH TEMPLATE STRING
#  Y COORDINATE OF "LIST OF SCORES"

#  NINTH TEMPLATE STRING
#  LIST OF ALL CONTESTANTS WITH SCORE

#  END WITH TWO ZERO BYTES

# END AT EA-3 BECAUSE THESE ARE JUST ZEROES
30040 FOR L=DEC("1301") TO EA-3
30045  TV=PEEK(L)

#      CHECK FOR 35/$23. IF NOT, APPEND CHARACTER TO TEMPLATE STRING
30050  IF TV=35 THEN TX=TX+1:TL$(TX)="":PC=PW*TX:GOSUB 1140:GOTO 30060

30055  TL$(TX)=TL$(TX)+CHR$(TV)

30060 NEXT

30065 BANK 15


# GENERATE LIST OF SCORES ONCE. IS SAME FOR ALL
30105 T$="ENERATE CORELIST":GOSUB 1127

30106 IX=1:SL$="":PW=38/IM(CD)
30107 PC=0:GOSUB 1140
30108 FOR L=0 TO IM(CD)
30110  TS$=PN$(CD,SO(CD,L))
30112  IF LEN(TS$)<3 THEN 30122
30114  TS=PS(CD,SO(CD,L))

30118  T$=MID$(STR$(PR%(CD,IX-1)),2)+ CHR$(7) +TS$+ CHR$(7) +MID$(STR$(TS),2)

30119  GOSUB 2300:SL$=SL$+T2$+CHR$(13)

30120  IX=IX+1
30121  PC=L*PW:GOSUB 1140
30122 NEXT

30130 Y2=740-IM(CD)*11:Y1=Y2-20:
30135 Y1$=MID$(STR$(Y1),2)
30137 Y2$=MID$(STR$(Y2),2)


#TC$:TEMP COMPETITION NAME (IE ASCII FLAVOR)
#TD$:TEMP DISZIPLINE NAME (ASCII)
#TT$:TEMP DATE OF COMPETITION
#TR%,TR$: TEMP RANK OF PLAYER
30150 T$=CN$:GOSUB 2300:TC$=T2$
30151 T$=DN$(CD):GOSUB 2300:TD$=T2$
30152 T$="27.ULI - 11.UGUST 2024":GOSUB 2300:TT$=T2$

30160 T$="ENERATE -ILES":GOSUB 1127

# CONCATENATE
# 2300 DOES PETSCII TO ASCII
30170 IX=1:PW=38/IM(CD)
30180 PC=0:GOSUB 1140

#FX: FILE INDEX. USED TO WRITE MULTIPLE FILES IF LENGTH OF 8K IS EXCEEDED
30185 FX=1
30190 GOSUB 31050

#     ITERATE OVER PLAYERS
30202 FOR L=0 TO IM(CD)

#      NAME
30203  TS$=PN$(CD,SO(CD,L))
30204  IF LEN(TS$)<3 THEN 30230

30205  CHAR 1,2,3,TS$+LEFT$(SP$,37-LEN(TS$))

30206  T$=TS$:GOSUB 2300:TS$=T2$
30207  T$="ER PIELER":GOSUB 2300:PG$=T2$

#      RANK
30215  TR%=PR%(CD,L):TR$=MID$(STR$(TR%),2)

30216  PRINT#1,TL$(0)TC$TL$(1)TT$TL$(2)PG$;
30217  PRINT#1,TL$(3)TS$TL$(4)TD$TL$(5)TR$TL$(6)Y1$TL$(7)Y2$TL$(8)SL$CHR$(1);

30220  IX=IX+1
30221  PC=L*PW:GOSUB 1140

30230 NEXT

30235 GOSUB 31100


# GENERATE
#  ITERATE OVER PLAYERS OF CURRENT DISCIPLINE
#  CONCATENATE TEMPLATE STRINGS WITH DATA OF CURRENT PLAYER
#  COUNT LENGTH OF GENERATED FILE
#  IF FILESIZE>30000 CHARS, CONTINUE WITH NEW FILE


# THIS APPROACH IS LIKELY HEAVIER ON THE PRINTFOX FT->GB PART THAN
#  THE MANUAL APPROACH FROM PREVIOUSLY.
#  (GENERATION OF INDIVIDUAL GB FILES AND MERGING ON GB LEVEL)
#  BUT IT SHOULD BE MORE AUTOMATED AND LESS DEPENDENT ON USER INPUT


#31000 PRINT CHR$(19)CHR$(19);
31001 RETURN

# CREATE NEW FILE AND OPEN FOR WRITING
31050 CF$=LEFT$(DN$(CD),11)+"-"+MID$(STR$(FX),2)+".FT"

31055 OPEN1,DU,1,"@0:"+CF$
31060 PRINT#1,CHR$(84);

31070 RETURN


# WRITE CLOSING BYTES AND CLOSE FILE
31100 PRINT#1,CHR$(0)CHR$(0);
31110 CLOSE 1
31120 RETURN


##################
# STATE HANDLING #
##################
32000 REM PRINT "CHECKING STATEFILE... ";
32005 DOPEN #1,"POWERCOMP.STATE",R,U(DU)
32010 IF DS > 0 THEN 32040

32020 INPUT#1,DN$
32040 DCLOSE #1

32090 RETURN

#####################
# MENU KEY-HANDLING #
#####################


# ARROW-LEFT FOR CLOSING MENU
55000 IF ASC(I$)=95 THEN MN%=-1:MI%=0:GOSUB 1700:GOSUB705:GOTO 55299

# DOWN
55010 IF I$=CHR$(17) THEN BEGIN
55012  GOSUB 61110
55014  MI%=MI%+1
55015  IF MN$(MN%,MI%)="-" THEN MI%=MI%+1
55016  IF MI%>=MS%(MN%,1) THEN MI%=0

55018  GOSUB 61100
55019 BEND:GOTO 55299

# UP
55020 IF I$=CHR$(145) THEN BEGIN
55022  GOSUB 61110
55024  MI%=MI%-1
55025  IF MI%<0 THEN MI%=MS%(MN%,1)-1
55026  IF MN$(MN%,MI%)="-" THEN MI%=MI%-1

55028  GOSUB 61100
55029 BEND:GOTO 55299


# RIGHT
55030 IF I$=CHR$(29) THEN BEGIN
55031  MI%=0
55032  MN%=MN%+1
55034  IF MN%>2 THEN MN%=0
55036  GOSUB 1700
55038  GOSUB 61005
55039 BEND:GOTO 55299


# LEFT
55040 IF I$=CHR$(157) THEN BEGIN
55041  MI%=0
55042  MN%=MN%-1
55044  IF MN%<0 THEN MN%=2
55046  GOSUB 1700
55048  GOSUB 61005
55049 BEND:GOTO 55299

#     RETURN KEY
55050 IF I$=CHR$(13) THEN BEGIN

#      FILE MENU
55060  IF MN%=0 THEN BEGIN

#       NEW
55062   IF MI%=0 THEN NW=-1:GOTO 55100

#       LOAD
55065   IF MI%=1 THEN GOSUB1700:MN%=-1:MI%=0:AC=0:GOSUB 1100:GOTO 55100

#       SAVE
55070   IF MI%=2 THEN BEGIN
55072    GOSUB 1700:MN%=-1:MI%=0
55073    IF LEN(DN$)=0 THEN GOSUB 2100:ELSE GOSUB 1000
55074   BEND:GOTO 55100

#       SAVE AS
55075   IF MI%=3 THEN GOSUB 1700:MN%=-1:MI%=0:GOSUB 2100:GOTO 55100

#       EXIT
55080   IF MI%=5 THEN 55350

#      FILE MENU END
55100  BEND:GOTO 55290

#      ORDER MENU
55110  IF MN%=1 THEN BEGIN


55150   IF MI%=0 THEN GOSUB 1700:T$="ORTING BY ":GOSUB1120:GOSUB 1200:GOSUB 55300
55160   IF MI%=1 THEN GOSUB 1700:GOSUB 1300:GOSUB 55300
55170   IF MI%=2 THEN GOSUB 1700:GOSUB 1400:GOSUB 55300
55175   IF MI%=3 THEN GOSUB 1700:GOSUB 1500:GOSUB 55300

55190  BEND:GOTO 55290

#      GENERATE MENU
55200  IF MN%=2 THEN BEGIN

#       SCOREBOARD
55210   IF MI%=0 THEN GOSUB 1700:GOSUB 1900:GOSUB 55300:GOTO 55240
#       PRINTFOX
55220   IF MI%=1 THEN GOSUB 1700:MN%=-1:MI%=0:AC=1:GOSUB 1100:GOTO 55240
#       CSV
55230   IF MI%=2 THEN GOSUB 1700:GOSUB 2200:GOSUB 55300:GOTO 55240


# COMMODORE+E FOR CSV-EXPORT OF CURRENT DISCIPLINE
#343 IF I$=CHR$(177) THEN GOSUB 2200:GOTO 399

# COMMODORE+G FOR PRINTFOX-GENERATOR
#344 IF I$=CHR$(165) THEN AC=1:GOSUB1100:GOTO410

# CBM+P - PREVIEW
#393 IF I$=CHR$(175) THEN GOSUB 1900:GOTO 399

55240  BEND


#     RETURN KEY END
55290 BEND

55299 RETURN

55300 MN%=-1:MI%=0:GOSUB 1700:GOSUB 800:GOSUB 1800:GOSUB705:RETURN

55350 PRINT CHR$(142)"BYE!"CHR$(27)"L":END


############################
# FILE DIALOG KEY HANDLING #
############################
56000 REM STARTINGPOINT


#     SELECT FILENAME FROM FILE LIST
56030 IF I$=CHR$(13) THEN BEGIN

#     1120=DISPLAY PROGRESS DIALOG,1150=EXTRACT FILENAME
56040  T$="OADING FROM ISK":GOSUB1120:GOSUB1150

56050  CI=0:PI=0:P=PI+4:SC=-1


#      LOAD SCORE FILE. , 1160=SET RETURN PARAMS AND COMMENCE LOADING
56060  IF AC=0 THEN GOSUB1160:AT=-1

#      LOAD TEMPLATE FILE
56070  IF AC=1 THEN GOSUB30000:AT=-1

56080 BEND



#     CLOSE FILELIST DIALOG WITHOUT LOADING FILE
56100 IF I$="" THEN BEGIN
56110  IF LEN(CN$)=0 THEN CI=3:P=2:ELSE CI=0:P=PI+4
56120  AT=-1
56130 BEND

#     R TO RENAME FILE
56150 IF I$="R" THEN BEGIN
56160  GOSUB703:CI=6:SC=-1:GOSUB 705
56170 BEND

#     D TO DELETE FILE
56200 IF I$="D" THEN BEGIN
56210  GOSUB 703:GOSUB2550:GOSUB705
56220 BEND


56890 RETURN







################
# UI FRAMEWORK #
################

# RENDER FRAME
# WH%: WINDOW HEIGHT
# WW%: WINDOW WIDTH
#10,2,70,22
60000 WINDOW W%(W%,0),W%(W%,1),W%(W%,2),W%(W%,3),1
60004 WW%=W%(W%,2)-W%(W%,0)+1
60006 WH%=W%(W%,3)-W%(W%,1)+1

60008 TL%=(WW%-4-LEN(T$))/2

60010 COLOR5,1
60015 PRINTCHR$(27)"M"LEFT$(SP$,WW%-4)""CHR$(27)"J";

60020 PRINT SPC(2)""LEFT$(SP$,TL%)T$LEFT$(SP$,TL%)"";

60030 CHAR 1,0,1:PRINT LEFT$(BD$(0),(WH%-2)*3);

60040 CHAR 1,0,1:PRINT LEFT$(BD$(1),(WH%-2)*3);

60060 PRINT""LEFT$(BD$(2),WW%-2)""CHR$(27)"L";

60999 RETURN


#############
# DRAW MENU #
#############
# SAVE SCREEN STATE
61000 GOSUB 1600

# REMOVE BLINKING CURSOR
61005 GOSUB790

61020 TL%=MS%(MN%,0):IX=MS%(MN%,1)
61025 WINDOW MN%(MN%,0),2,MN%(MN%,0)+TL%+5,2+IX+2,1


61030 PRINT CHR$(27)"M"MU$(MN%)CHR$(27)"J";

# HIGHLIGHT MENU-LINE ENTRY
61040 VMF 2048+80+MN%(MN%,0),192,MN%(MN%,1)


# HIGHLIGHT SELECTED MENU ENTRY
61060 GOSUB 61100

61098 PRINT CHR$(19)CHR$(19);

61099 RETURN



# HIGHLIGHT MENU ENTRY
61100 VMF 2048+241+MN%(MN%,0)+MI%*80,192,MS%(MN%,0)+2:RETURN

# DE-HIGHLIGHT MENU ENTRY
61110 VMF 2048+241+MN%(MN%,0)+MI%*80,128,MS%(MN%,0)+2:RETURN




62900 PRINT"LOADING MENU...";:BLOAD"MENU",U(DU),P(BE),B0:PRINT "DONE"
62902 EA=PEEK(174)+PEEK(175)*256
62904 RTV BE+2,160,PEEK(BE+1)

62910 MH=PEEK(BE+25):MW=PEEK(BE+26)


62999 RETURN


# DECLARE MENU STRUCTURE
63000 MN$(0,0)="EW          +":MN$(0,1)="OAD         +"
63001 MN$(0,2)="AVE         +":MN$(0,3)="AVE AS...   +"
63002 MN$(0,4)="-"                 :MN$(0,5)="XIT         +"

63003 MN$(1,0)="BY       1":MN$(1,1)="BY AME    3"
63004 MN$(1,2)="BY CORE   5":MN$(1,3)="EVERSE    7"

63005 MN$(2,0)="COREBOARD   +":MN$(2,1)="RINTFOX   +"
63006 MN$(2,2)="          +"


63009 RETURN

# CALCULATE MENU SIZES
# MS%: MENU-SIZE DATA
# 0:WIDTH
# 1:NR OF ENTRIES
# GET MENU DIMENSIONS
# TL%:TEMP-LENGTH (KEEP MAX LENGTH OF MENU ENTRIES)
# TR%:TEMPORARY VALUE FOR COMPARISON OF TL%
# TR$:TEMPORARY STRING VALUE
# IX=KEEPS THE HIGHEST OCCUPIED INDEX (ARRAY MIGHT NOT BE FULLY USED)
63100 MN%=0
63101 DO
63102  GOSUB 63130
63105  MS%(MN%,0)=TL%:MS%(MN%,1)=IX


# TOP BORDER
63110  TR$=""+LEFT$(BD$(2),TL%+2)+"  "

63112  FOR L=0 TO IX-1
63114   IF MN$(MN%,L)="-" THEN TR$=TR$+""+LEFT$(BD$(2),TL%+2)+"":ELSE BEGIN
63116    TC$=MN$(MN%,L):TC$=" "+TC$+LEFT$(SP$,TL%-LEN(TC$))+" "

63118    TR$=TR$+TC$

63120   BEND
63121   TR$=TR$+""
63122  NEXT

# BOTTOM BORDER
63123  TR$=TR$+""+LEFT$(BD$(2),TL%+2)+""
63124  TR$=TR$+"  "+LEFT$(SP$,TL%+4)+""

63125  MU$(MN%)=TR$

63126  MN%=MN%+1


63127 LOOP WHILE MN%<3

63128 MN%=-1
63129 RETURN



63130 TL%=0:IX=0
63132 FOR D=0 TO 5
63134  TR%=LEN(MN$(MN%,D)):IF TR%>TL% THEN TL%=TR%
63136  IF TR%>0 THEN IX=IX+1
63138 NEXT
63139 RETURN