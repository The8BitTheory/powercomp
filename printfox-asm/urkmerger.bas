#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0,uppercase,10,10
#########################
# THIS ORS TWO GB FILES #
#########################

# LOAD TOP-HALF GB TO BANK0, AFTER BASIC (B0,BE)
# UNCOMPRESS GB TO BANK 1 AFTER VARIABLES (B1,VE)

# LOAD DISZIPLIN-GB TO BANK 1 AFTER VARIABLES+32000 (B1,VE+32K)
# UNCOMPRESS DISZIPLIN-GB TO BANK 0 AFTER BASIC (B0,BE)

# MERGE TH-UGB (B1,VE) AND DISZIPLIN-UGB (B0,BE) TO B0,BE
# SAVE TO DISK

# LOAD PLAYER GB TO BANK 1 AFTER VARIABLES+32000 (B1,VE+32K)
# UNCOMPRESS PLAYER-GB TO BANK 1 AFTER VARIABLES (B1,VE)

# MERGE PLAYER-UGB(B1,VE) INTO TO B0,BE

# PACK B0,BE TO B1,VE


2 S1=TI:FAST:GRAPHIC1:GRAPHIC0:GRAPHIC5:BANK15:POKE 57,0:POKE58,39:CLR
4 DD=PEEK(186)

# BASIC END (CONTAINS COMPRESSED GB FILE)
6 BE=PEEK(4624)+PEEK(4625)*256

# VARIABLE END (CONTAINS UNCOMPRESSED GB FILES)
8 VE=PEEK(57)+PEEK(58)*256

10 PRINT "BASIC END (COMPRESSED GB):"BE
12 PRINT "VARIABLE END (UNCOMP. GB):"VE

15 PRINT "LOADING GB.BIN...";:BLOAD"GB.BIN",B0,U(DD):PRINT "DONE"
16 PRINT "LOADING FSAVE.BIN...";:BLOAD"FSAVE-1C20.BIN",B0,U(DD):PRINT "DONE"

20 DEF FN HB(ZZ)=INT(ZZ/256)
21 DEF FN LB(ZZ)=ZZ-INT(ZZ/256)*256
22 DEF FN RO(ZZ)=ABS((ZZ AND 1) = 1)*32000

25 PN$="":FM=0:TF=0:FF=0:SB=0:SA=0:DB=0:DA=0:FE=0:EA=0:PM=31:DM=6:DIM IM(DM),PN$(DM,PM),PS(DM,PM)

# LOAD DATAFILE
30 GOSUB 1100

# CREATE ARRAY TO STORE FILENAMES FOR REU ACCESS
# 1 FILE=32000 BYTES --> 2 FILES PER REU-PAGE
# EVEN INDICES -> 0 OFFSET
# ODD INDICES -> 32000 OFFSET (X AND 1 = 1)
32 DIM FI$(99)

90 PRINT FRE(0) FRE(1)

#95 GOTO 500


100 FOR CD=0 TO 5

# MERGE TOP-PART AND DISZIPLIN PART

102  IF CD<5 THEN FI$="24SUM3.GB1":ELSE FI$="24SUM-GESA.GB1"


#    LOAD TOP-PART
105  SB=0:SA=BE      :DB=1:DA=VE:GOSUB 1000


#    LOAD DISZIPLIN-NAME
110  FI$="DISZ"+LEFT$(DN$(CD),4)+".GB":SB=1:SA=VE+32000:DB=0:DA=BE:GOSUB 1000



#    MERGE PARAMETERS
# IMG1 BANK: 996
# IMG1 START ADDRESS (UNCOMP GB):997/998

# IMG2 BANK: 1001
# IMG2 START ADDRESS (UNCOMP GB):1002/1003
115  POKE 996,1
120  POKE 997,FNLB(VE):POKE 998,FNHB(VE)

125  POKE 1001,0
130  POKE 1002,FNLB(BE):POKE 1003,FNHB(BE)

135  PRINT "MERGING DISCIPLINE FROM B1,"VE" TO B0,"BE"... ";:S=TI:SYS DEC("1306"):S=TI-S
140  PRINT "DONE. TOOK "S" JIFFIES"

#    STORE TOP-HALF WITH DISZIPLIN IN REU
145  SA=BE:EA=BE+32000:SB=0:FF=FM:TF=FF
146  FI$="@0:S24-"+LEFT$(DN$(CD),4)+".GB1,P,W"
147  RB=0:RO=32000:GOSUB 4020


150  FOR P = 0 TO IM(CD)

#     GET TOP-HALF WITH DISZIPLIN FROM REU
160   FI$="@0:S24-"+LEFT$(DN$(CD),4)+".GB1,P,W"
170   FF=TF:DB=0:DA=BE

180   RB=0:RO=32000:GOSUB 3010


#     LOAD PLAYERNAME
250   PN$=LEFT$(PN$(CD,P),3)
252   FI$="SPI"+PN$+".GB"    :SB=1:SA=VE+32000:DB=1:DA=VE:GOSUB 1000


#     MERGE PARAMETERS
254   POKE 996,DB
256   POKE 997,FNLB(DA):POKE 998,FNHB(DA)

258   POKE 1001,0
260   POKE 1002,FNLB(BE):POKE 1003,FNHB(BE)


261   PRINT "MERGING PLAYERNAME "PN$" FROM B1,"VE" TO B0,"BE"... ";:S=TI:SYS DEC("1306"):S=TI-S
262   PRINT "DONE. TOOK "S" JIFFIES"


#     PACK PARAMETERS
# SOURCE BANK: 996
# SOURCE START ADDRESS (COMP GB):997/998

263   POKE 996,0
264   POKE 997,FNLB(BE):POKE 998,FNHB(BE)

# DEST BANK: 999
# DEST START ADDRESS (UNCOMP GB):1000/1001
266   POKE 999,1
268   POKE 1000,FNLB(VE):POKE 1001,FNHB(VE)


270   PRINT "PACKING... B0,"BE" TO B1,"VE;:S=TI:SYS DEC("1309"):S=TI-S
272   PRINT "DONE. TOOK "S" JIFFIES"

275   EA=PEEK(1002)+PEEK(1003)*256
276   PRINT "PACKED GB RESIDES IN B1 FROM "VE" TO "EA

277   FI$="@0:S24-"+LEFT$(DN$(CD),4)+"-"+PN$+".GB1,P,W"

280   SB=1:SA=VE:GOSUB 5000


490  NEXT

499 NEXT



500 FM=0
505 FOR CD = 5 TO 5

507  FOR R=1 TO 25

510   FI$="24SUM-"+LEFT$(DN$(CD),4)+".GB2"    :SB=0:SA=BE      :DB=1:DA=VE:GOSUB 1000


530   FI$="RANG"+MID$(STR$(R),2)+".GB":SB=1:SA=VE+32000:DB=0:DA=BE:GOSUB1000


#     MERGE PARAMETERS
540   POKE 996,1
550   POKE 997,FNLB(VE):POKE 998,FNHB(VE)

560   POKE 1001,0
570   POKE 1002,FNLB(BE):POKE 1003,FNHB(BE)


580   PRINT "MERGING RANK "R" FROM B1,"VE" TO B0,"BE"... ";:S=TI:SYS DEC("1306"):S=TI-S
590   PRINT "DONE. TOOK "S" JIFFIES"


#     PACK PARAMETERS
# SOURCE BANK: 996
# SOURCE START ADDRESS (COMP GB):997/998

600   POKE 996,0
610   POKE 997,FNLB(BE):POKE 998,FNHB(BE)

# DEST BANK: 999
# DEST START ADDRESS (UNCOMP GB):1000/1001
620   POKE 999,0
630   POKE 1000,FNLB(BE+32000):POKE 1001,FNHB(BE+32000)


640   PRINT "PACKING... B0,"BE" TO B0,"BE+32000;:S=TI:SYS DEC("1309"):S=TI-S
650   PRINT "DONE. TOOK "S" JIFFIES"

660   EA=PEEK(1002)+PEEK(1003)*256
670   PRINT "PACKED GB RESIDES IN B0 FROM "BE" TO "BE+32000

680   FI$="@0:S24-"+LEFT$(DN$(CD),4)+"-"+MID$(STR$(R),2)+".GB2,P,W"

690   SB=0:SA=BE+32000:GOSUB 5000

#    RANKS
700  NEXT

#   DISZIPLINES
720 NEXT


999 BANK15:GRAPHIC5:S1=TI-S1:PRINT "TOTAL:"S1:END

### TIMES
# 9032. 4 DISZIPLINES, NO REU
# 8422. LOADING FIRST FILE FROM REU


# 157094 FOR 5 DISZIPLINES AND ALL PLAYERS. TOP HALF OF PAGE. STILL HAD ERRORS
# 116310 FOR 5 DISZIPLINES AND ALL PLAYERS. TOP HALF OF PAGE. OPTIMIZED REU MEM-USAGE
# = 32 MINUTES


##############
# UNCOMPRESS #
##############
1000 FF=-1:FX=0
1005 DO
1010  IF FI$(FX)=FI$ THEN FF=FX:EXIT
1015  FX=FX+1
1020 LOOP UNTIL FX>99

1025 IF FF>=0 THEN GOSUB 3000:GOTO 1099: ELSE GOSUB 2000


# SET VARIABLES FOR UNCOMPRESSION

# SOURCE BANK
1030 POKE 996,SB

# SOURCE START ADDRESS
#1040 POKE 997,PEEK(4624):POKE 998,PEEK(4625)
1040 POKE 997,FNLB(SA):POKE 998,FNHB(SA)

# SOURCE END ADDRESS
1050 POKE 999,PEEK(174):POKE 1000,PEEK(175)

# DESTINATION BANK
1060 POKE 1001,DB

# DESTINATION ADDRESS
#1070 POKE 1002,FNLB(VE):POKE 1003,FNHB(VE)
1070 POKE 1002,FNLB(DA):POKE 1003,FNHB(DA)

1080 PRINT "UNCOMPRESSING TO: B"DB",DA"DA" - "(DA+32000)
1090 S=TI:SYS DEC("130C"):S=TI-S
1092 PRINT "DONE. TOOK "S" JIFFIES"

1095 GOSUB 4000

1099 RETURN


##################
# LOAD DATA FILE #
##################

1100 DN$="SOMMER2024.PC"
1110 OPEN1,DD,3,DN$+",R"
1120 INPUT#1,CN$
1130 INPUT#1,DX


1132 FOR D=0 TO DX
1134  INPUT#1,DN$(D)

# MAKE ALL CHARACTERS UPPERCASE (OR 64)
1135  T=ASC(LEFT$(DN$(D),1))
1140  IF T>128 THEN DN$(D)=CHR$((T-96) AND (255-32))+MID$(DN$(D),2)

1145  INPUT#1,IM(D)

1150  FOR L=0 TO IM(D)
1155   INPUT#1,PN$(D,L)

1156   PN$=""
1157   FOR I=1 TO 3
1160    T=ASC(MID$(PN$(D,L),I,1))
1165    IF T>128 THEN C$=CHR$((T-96) AND (255-32)):ELSE C$=MID$(PN$(D,L),I,1)
1166    PN$=PN$+C$
1170   NEXT

1175   PN$(D,L)=PN$+MID$(PN$(D,L),4)

1189   INPUT#1,PS(D,L)
1190  NEXT

1192 NEXT
1193 CLOSE1

1199 RETURN

#############################
# LOAD GB FILE TO BASIC-END #
#############################
2000 PRINT "LOADING "FI$" TO B"SB",AD"SA;
2005 DOPEN #1,U(DD),(FI$),R
2010 GET#1,A$,B$
2020 DCLOSE #1

2030 IF A$<>"G" THEN PRINT FI$" IS NOT A GB FILE":END

# LOAD BINARY FILE. LEAVE TWO BYTES EMPTY AND MANUALLY POKE THE VALUES (BLOAD SKIPS THESE)
2040 BLOAD (FI$),B(SB),P(SA+2),U(DD)
2041 PRINT "DONE"


# FILE END (END OF COMPRESSED GB FILE
2042 FE=PEEK(174)+PEEK(175)*256
2044 PRINT "FILE END:"FE


2050 BANK SB
2052 POKE SA,ASC(A$):POKE SA+1,ASC(B$)
2054 BANK 15



2070 RETURN

########################
# GET UNCOMPRESSED GB FROM REU #
########################
# FETCH ANZAHL, START INTERN, START REU, REU-BANK

# RB:REU-BANK
# RO:REU-OFFSET INSIDE BANK
# FF:INDEX OF FILENAME IN REU
3000 RB=INT(FF/2)
3005 RO=FN RO(FF)

3010 BANK DB
3015 FETCH 32000,DA,RO,RB
3020 BANK 15

3030 PRINT "FETCH "FI$" FROM REU-INDEX "FF" (B"RB",O"RO") TO ADDRESS "DA", BANK "DB

3999 BANK15:RETURN

########################
# STORE UNCOMPRESSED GB TO REU #
########################
# STASH ANZAHL, START INTERN, START REU, REU-BANK

4000 RB = INT(FM/2)
4005 RO = FN RO(FM)

4010 FI$(FM)=FI$
4015 FM=FM+1
4020 BANK DB

4025 STASH 32000,DA,RO,RB

4030 BANK 15

4040 PRINT "STORE "FI$" TO REU-INDEX "(FM-1)" (B"RB",O"RO") FROM ADDRESS "DA", BANK "DB

4999 RETURN


#########################
# FSAVE 
#########################
# TAKES SA AS START ADDRESS
#       EA AS END ADDRESS
#       SB AS SAVE-BANK


5000 FP=POINTER(FI$):BANK 1:F0=PEEK(FP):F1=PEEK(FP+1):F2=PEEK(FP+2):BANK15

5010 POKE 1002,F0:REM PRINT "FILENAME LENGTH:"F0
5020 POKE 1000,F1:POKE 1001,F2:REM PRINT "FILENAME ADDRESS:"(F1+F2*256)

#285 BSAVE"@24SUM-"+LEFT$(DN$(CD),4)+".GB1",B1,P(VE) TO P(EA),U(DD)

#    FILE START-ADDRESS
5030 POKE DEC("FB"),FNLB(SA):POKE DEC("FC"),FNHB(SA)
#    FILE END-ADDRESS
5040 POKE 998,FNLB(EA):POKE 999,FNHB(EA)

#    FILE BANK
5050 POKE 1003,SB

#285 SCRATCH (FI$)
5060 POKE186,10:PRINT "SAVING "SA" TO "EA" AS "FI$"...";:SYS DEC("1C20"):PRINT "DONE":POKE186,8


5999 RETURN
