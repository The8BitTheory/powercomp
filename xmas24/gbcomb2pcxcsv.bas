#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0,uppercase,10,10
1 REM GBCOMB2PCX PROGRAM - COMBINES TOP AND BOTTOM HALF-PAGES AND WRITES THEM TO PCX
2 REM DOES THE FOLLOWING STEPS
3 REM 1) BLOAD GB FILE (SPECIAL TREATMENT FOR FIRST 2 BYTES)
4 REM 2) UNPACKS GB FILE BY USING GB2VDC.BIN (IE RE-ORGANIZING BYTES TO BE CONTINOUS)
5 REM 3) PACKS RAW DATA FROM STEP 2 TO PCX FORMAT BY USING PCXPACK.BIN
6 REM 4) FSAVE PACKED PCX-FILE

10 GRAPHIC1:GRAPHIC0:GRAPHIC5:FAST:BANK15:POKE 57,0:POKE58,39:CLR

11 DEF FN HB(ZZ)=INT(ZZ/256)
12 DEF FN LB(ZZ)=ZZ-INT(ZZ/256)*256

14 DD=PEEK(186)

# BASIC END (CONTAINS COMPRESSED GB FILE)
16 BE=PEEK(4624)+PEEK(4625)*256

# VARIABLE END (CONTAINS UNCOMPRESSED GB FILES)
18 VE=PEEK(57)+PEEK(58)*256

20 PRINT "LOADING GB2VDC.BIN...";:BLOAD"GB2VDC.BIN",B0,U(DD):PRINT "DONE"
22 PRINT "LOADING PCXPACK2-1720.BIN...";:BLOAD"PCXPACK2-1720.BI",B0,U(DD):PRINT "DONE"
24 PRINT "LOADING FSAVE-1E33.BIN...";:BLOAD"FSAVE-1E33.BIN",B0,U(DD):PRINT "DONE:"ST

30 PN$="":PR$="":FM=0:TF=0:FF=0:SB=0:SA=0:DB=0:DA=0:FE=0:EA=0:PM=31:DM=6
32 DIM IM(DM),PN$(DM,PM),PS(DM,PM),PR%(DM,PM),SO(DM,PM),SO$(DM,PM),TS(DM,PM),DN$(DM)


33 DIM FI$(99)

35 INPUT "COMPETITION-ID (3 CHARS)";CI$
36 IF LEN(CI$)>3 THEN CI$=LEFT$(CI$,3)
37 INPUT "DISCIPLINE-ID (3 CHARS)";DI$
38 IF LEN(DI$)>3 THEN DI$=LEFT$(DI$,3)

39 PRINT FRE(0) FRE(1):DIM DT$(50,3)

40 FI$="WERTNG"+CI$+DI$+".CSV"
41 DOPEN #1,(FI$):IF DS<>0 THEN PRINT DS$" FILE "FI$:END
42 X=0:DO 
43  INPUT#1,DT$(X,0),DT$(X,1),DT$(X,2)
44  IF LEFT$(DT$(X,0),1)=CHR$(10) THEN DT$(X,0)=MID$(DT$(X,0),2)

45  X=X+1
46 LOOP UNTIL ST>=64
47 DCLOSE #1
48 PRINT "CSV LOADED. "X" ENTRIES READ."
49 IM(0)=X-1:GOSUB 6000


50 OD=10

85 FOR P = 0 TO IM(0)

 
87  PN$=LEFT$(DT$(P,3),3) 
88  PR$=DT$(P,0)
89  DN$=DI$

90  FO$=CI$+"-"+DN$+"-"+PN$+".PCX"

95  DOPEN#1,(FO$),R,U(OD):CS=DS:DCLOSE#1
96  IF CS<>62 THEN PRINT FO$" ALREADY EXISTS. SKIPPING.":GOTO 150

#99  PRINT "P="P", PN$="PN$", PR$="P$", PR%="PR%(CD,P)",PS="PS(CD,SO(CD,P))

#    STEP 1 - LOAD GB1 FILE
100  FI$=CI$+"-"+DN$+"-"+PN$+".GB1"
101  DOPEN#1,(FI$),R,U(DD):CS=DS:DCLOSE#1
102  IF CS=62 THEN PRINT FI$" MISSING. SKIPPING.":MP$(MP)=DT$(R,3):MP=MP+1:GOTO150


105  SB=1:SA=VE+32000:GOSUB 2000:G1=FE:SE=FE

#    STEP 2 - UNCOMPRESS FLAT
110  DB=1:DA=VE:GOSUB 1000

#    STEP 3 - CREATE PCX HEADER AND COMPRESS GB1-PCX FILE
120  SB=1:SA=VE:DB=0:DA=BE:SY=DEC("1726"):GOSUB 3000:E1=EA

#    # LOAD GB2 FILE
121  FI$=CI$+"-"+DN$+"-"+PR$+".GB2"
122  DOPEN#1,(FI$),R,U(DD):CS=DS:DCLOSE#1
123  IF CS=62 THEN PRINT FI$" MISSING. SKIPPING.":MP$(MP)=DT$(R,3):MP=MP+1:GOTO150

124  SB=1:SA=VE+32000:GOSUB 2000:G2=FE:SE=FE

#    UNCOMPRESS FLAT
125  DB=1:DA=VE:GOSUB 1000

#    COMPRESS GB2-PCX FILE
126  SB=1:SA=VE:DB=0:DA=E1:SY=DEC("1729"):GOSUB 3000:E2=EA

#    STEP 4 - SAVE TO PCX FILE
140  SB=0:SA=BE:DA=E2:FI$="@0:"+FO$+",P,W":GOSUB 5000

150 NEXT

160 PRINT "MISSING PLAYERFILES:"
162 FOR X=0 TO MP
164  PRINT MP$(X)
166 NEXT


199 END


###############################################
# UNCOMPRESS GB FILE TO CONTINUOUS BIT STREAM #
###############################################

# SOURCE BANK
1000 POKE 996,SB

# SOURCE START ADDRESS
#1040 POKE 997,PEEK(4624):POKE 998,PEEK(4625)
1040 POKE 997,FNLB(SA):POKE 998,FNHB(SA)

# SOURCE END ADDRESS
1050 POKE 999,FNLB(SE):POKE 1000,FNHB(SE)

# DESTINATION BANK
1060 POKE 1001,DB

# DESTINATION ADDRESS
#1070 POKE 1002,FNLB(VE):POKE 1003,FNHB(VE)
1070 POKE 1002,FNLB(DA):POKE 1003,FNHB(DA)

1080 PRINT "UNCOMPRESSING TO: B"DB",DA"DA" - "(DA+32000)
1090 S=TI:SYS DEC("1300"):S=TI-S
1092 PRINT "DONE. TOOK "S" JIFFIES"


1099 RETURN



################
# LOAD GB FILE #
################
2000 PRINT "LOADING "FI$" TO B"SB",AD"SA;
2005 DOPEN #1,U(DD),(FI$),R
2010 GET#1,A$,B$
2020 DCLOSE #1

2030 IF A$<>"G" THEN PRINT FI$" IS NOT A GB FILE":END

# LOAD BINARY FILE. LEAVE TWO BYTES EMPTY AND MANUALLY POKE THE VALUES (BLOAD SKIPS THESE)
2040 BLOAD (FI$),B(SB),P(SA+2),U(DD)
2041 PRINT "DONE"


# FILE END (END OF COMPRESSED GB FILE
2042 FE=PEEK(174)+PEEK(175)*256
2044 PRINT "FILE END:"FE


2050 BANK SB
2052 POKE SA,ASC(A$):POKE SA+1,ASC(B$)
2054 BANK 15



2070 RETURN


###################
# PCX COMPRESSION #
###################
#     PACK PARAMETERS
# SOURCE BANK: 996
# SOURCE START ADDRESS (COMP GB):997/998

3000 POKE 996,SB
3010 POKE 997,FNLB(SA):POKE 998,FNHB(SA)

# DEST BANK: 999
# DEST START ADDRESS (UNCOMP GB):1000/1001
3020 POKE 999,DB
3030 POKE 1000,FNLB(DA):POKE 1001,FNHB(DA)

3040 PRINT "PACKING... B"SB","SA" TO B"DB","DA;:S=TI:SYS SY:S=TI-S
3050 PRINT "DONE. TOOK "S" JIFFIES"

3060 EA=PEEK(1002)+PEEK(1003)*256
3070 PRINT "PACKED GB RESIDES IN B"DB" FROM "DA" TO "EA

3080 RETURN


#########################
# FSAVE 
#########################
# TAKES SA AS START ADDRESS
#       EA AS END ADDRESS
#       SB AS SAVE-BANK


5000 FP=POINTER(FI$):BANK 1:F0=PEEK(FP):F1=PEEK(FP+1):F2=PEEK(FP+2):BANK15

5010 POKE 1002,F0:REM PRINT "FILENAME LENGTH:"F0
5020 POKE 1000,F1:POKE 1001,F2:REM PRINT "FILENAME ADDRESS:"(F1+F2*256)


#    FILE START-ADDRESS
5030 POKE DEC("FB"),FNLB(SA):POKE DEC("FC"),FNHB(SA)
#    FILE END-ADDRESS
5040 POKE 998,FNLB(E2):POKE 999,FNHB(E2)

#    FILE BANK
5050 POKE 1003,SB

5055 POKE 186,OD
5060 PRINT "SAVING "SA" TO "E2" AS "FI$"...";:SYS DEC("1E33"):PRINT "DONE:"ST


5999 RETURN


#################
# ASCII TO PETSCII
#################

6000 REM
6005 FOR X=0 TO IM(CD)-1
6010  T$=DT$(X,1):T2$=""
6020  FOR TX=1 TO LEN(T$)
6030   C$=MID$(T$,TX,1):C=ASC(C$)
6040   IF C>=96 THEN IF C<=122 THEN T2$=T2$+CHR$(C-32):ELSE T2$=T2$+C$
6050  NEXT
6060  DT$(X,3)=T2$
6070 NEXT
6080 RETURN
